{"ast":null,"code":"import * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport Text from \"../Typography/Text\";\nimport Caption from \"../Typography/v2/Caption\";\nimport Title from \"../Typography/v2/Title\";\nvar LEFT_SIZE = 40;\nvar CardTitle = function CardTitle(_ref) {\n  var title = _ref.title,\n    titleStyle = _ref.titleStyle,\n    _ref$titleNumberOfLin = _ref.titleNumberOfLines,\n    titleNumberOfLines = _ref$titleNumberOfLin === void 0 ? 1 : _ref$titleNumberOfLin,\n    _ref$titleVariant = _ref.titleVariant,\n    titleVariant = _ref$titleVariant === void 0 ? 'bodyLarge' : _ref$titleVariant,\n    subtitle = _ref.subtitle,\n    subtitleStyle = _ref.subtitleStyle,\n    _ref$subtitleNumberOf = _ref.subtitleNumberOfLines,\n    subtitleNumberOfLines = _ref$subtitleNumberOf === void 0 ? 1 : _ref$subtitleNumberOf,\n    _ref$subtitleVariant = _ref.subtitleVariant,\n    subtitleVariant = _ref$subtitleVariant === void 0 ? 'bodyMedium' : _ref$subtitleVariant,\n    left = _ref.left,\n    leftStyle = _ref.leftStyle,\n    right = _ref.right,\n    rightStyle = _ref.rightStyle,\n    style = _ref.style,\n    themeOverrides = _ref.theme;\n  var theme = useInternalTheme(themeOverrides);\n  var TitleComponent = theme.isV3 ? Text : Title;\n  var SubtitleComponent = theme.isV3 ? Text : Caption;\n  var minHeight = subtitle || left || right ? 72 : 50;\n  var marginBottom = subtitle ? 0 : 2;\n  return React.createElement(View, {\n    style: [styles.container, {\n      minHeight: minHeight\n    }, style]\n  }, left ? React.createElement(View, {\n    style: [styles.left, leftStyle]\n  }, left({\n    size: LEFT_SIZE\n  })) : null, React.createElement(View, {\n    style: [styles.titles]\n  }, title && React.createElement(TitleComponent, {\n    style: [styles.title, {\n      marginBottom: marginBottom\n    }, titleStyle],\n    numberOfLines: titleNumberOfLines,\n    variant: titleVariant\n  }, title), subtitle && React.createElement(SubtitleComponent, {\n    style: [styles.subtitle, subtitleStyle],\n    numberOfLines: subtitleNumberOfLines,\n    variant: subtitleVariant\n  }, subtitle)), React.createElement(View, {\n    style: rightStyle\n  }, right ? right({\n    size: 24\n  }) : null));\n};\nCardTitle.displayName = 'Card.Title';\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 16\n  },\n  left: {\n    justifyContent: 'center',\n    marginRight: 16,\n    height: LEFT_SIZE,\n    width: LEFT_SIZE\n  },\n  titles: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  title: {\n    minHeight: 30,\n    paddingRight: 16\n  },\n  subtitle: {\n    minHeight: 20,\n    marginVertical: 0,\n    paddingRight: 16\n  }\n});\nexport default CardTitle;\nexport { CardTitle };","map":{"version":3,"names":["React","StyleSheet","View","useInternalTheme","Text","Caption","Title","LEFT_SIZE","CardTitle","_ref","title","titleStyle","_ref$titleNumberOfLin","titleNumberOfLines","_ref$titleVariant","titleVariant","subtitle","subtitleStyle","_ref$subtitleNumberOf","subtitleNumberOfLines","_ref$subtitleVariant","subtitleVariant","left","leftStyle","right","rightStyle","style","themeOverrides","theme","TitleComponent","isV3","SubtitleComponent","minHeight","marginBottom","createElement","styles","container","size","titles","numberOfLines","variant","displayName","create","flexDirection","alignItems","justifyContent","paddingLeft","marginRight","height","width","flex","paddingRight","marginVertical"],"sources":["D:\\software_studio\\final project\\beprod\\BeProductive\\node_modules\\react-native-paper\\src\\components\\Card\\CardTitle.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { MD3TypescaleKey, ThemeProp } from '../../types';\nimport Text from '../Typography/Text';\nimport Caption from '../Typography/v2/Caption';\nimport Title from '../Typography/v2/Title';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Text for the title. Note that this will only accept a string or `<Text>`-based node.\n   */\n  title: React.ReactNode;\n  /**\n   * Style for the title.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Number of lines for the title.\n   */\n  titleNumberOfLines?: number;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Title text variant defines appropriate text styles for type role and its size.\n   * Available variants:\n   *\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n   *\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n   *\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n   *\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n   *\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n   */\n  titleVariant?: keyof typeof MD3TypescaleKey;\n  /**\n   * Text for the subtitle. Note that this will only accept a string or `<Text>`-based node.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Style for the subtitle.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Number of lines for the subtitle.\n   */\n  subtitleNumberOfLines?: number;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Subtitle text variant defines appropriate text styles for type role and its size.\n   * Available variants:\n   *\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n   *\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n   *\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n   *\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n   *\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n   */\n  subtitleVariant?: keyof typeof MD3TypescaleKey;\n  /**\n   * Callback which returns a React element to display on the left side.\n   */\n  left?: (props: { size: number }) => React.ReactNode;\n  /**\n   * Style for the left element wrapper.\n   */\n  leftStyle?: StyleProp<ViewStyle>;\n  /**\n   * Callback which returns a React element to display on the right side.\n   */\n  right?: (props: { size: number }) => React.ReactNode;\n  /**\n   * Style for the right element wrapper.\n   */\n  rightStyle?: StyleProp<ViewStyle>;\n  /**\n   * @internal\n   */\n  index?: number;\n  /**\n   * @internal\n   */\n  total?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\nconst LEFT_SIZE = 40;\n\n/**\n * A component to show a title, subtitle and an avatar inside a Card.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/card-title-1.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar, Card, IconButton } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card.Title\n *     title=\"Card Title\"\n *     subtitle=\"Card Subtitle\"\n *     left={(props) => <Avatar.Icon {...props} icon=\"folder\" />}\n *     right={(props) => <IconButton {...props} icon=\"dots-vertical\" onPress={() => {}} />}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst CardTitle = ({\n  title,\n  titleStyle,\n  titleNumberOfLines = 1,\n  titleVariant = 'bodyLarge',\n  subtitle,\n  subtitleStyle,\n  subtitleNumberOfLines = 1,\n  subtitleVariant = 'bodyMedium',\n  left,\n  leftStyle,\n  right,\n  rightStyle,\n  style,\n  theme: themeOverrides,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const TitleComponent = theme.isV3 ? Text : Title;\n  const SubtitleComponent = theme.isV3 ? Text : Caption;\n\n  const minHeight = subtitle || left || right ? 72 : 50;\n  const marginBottom = subtitle ? 0 : 2;\n\n  return (\n    <View style={[styles.container, { minHeight }, style]}>\n      {left ? (\n        <View style={[styles.left, leftStyle]}>\n          {left({\n            size: LEFT_SIZE,\n          })}\n        </View>\n      ) : null}\n\n      <View style={[styles.titles]}>\n        {title && (\n          <TitleComponent\n            style={[styles.title, { marginBottom }, titleStyle]}\n            numberOfLines={titleNumberOfLines}\n            variant={titleVariant}\n          >\n            {title}\n          </TitleComponent>\n        )}\n        {subtitle && (\n          <SubtitleComponent\n            style={[styles.subtitle, subtitleStyle]}\n            numberOfLines={subtitleNumberOfLines}\n            variant={subtitleVariant}\n          >\n            {subtitle}\n          </SubtitleComponent>\n        )}\n      </View>\n      <View style={rightStyle}>{right ? right({ size: 24 }) : null}</View>\n    </View>\n  );\n};\n\nCardTitle.displayName = 'Card.Title';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 16,\n  },\n\n  left: {\n    justifyContent: 'center',\n    marginRight: 16,\n    height: LEFT_SIZE,\n    width: LEFT_SIZE,\n  },\n\n  titles: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n\n  title: {\n    minHeight: 30,\n    paddingRight: 16,\n  },\n\n  subtitle: {\n    minHeight: 20,\n    marginVertical: 0,\n    paddingRight: 16,\n  },\n});\n\nexport default CardTitle;\n\n// @component-docs ignore-next-line\nexport { CardTitle };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAS9B,SAASC,gBAAgB;AAEzB,OAAOC,IAAI;AACX,OAAOC,OAAO;AACd,OAAOC,KAAK;AA4FZ,IAAMC,SAAS,GAAG,EAAE;AA0BpB,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAGC,IAAA,EAeL;EAAA,IAdXC,KAAK,GAcCD,IAAA,CAdNC,KAAK;IACLC,UAAU,GAaJF,IAAA,CAbNE,UAAU;IAAAC,qBAAA,GAaJH,IAAA,CAZNI,kBAAkB;IAAlBA,kBAAkB,GAAAD,qBAAA,cAAG,CAAC,GAAAA,qBAAA;IAAAE,iBAAA,GAYhBL,IAAA,CAXNM,YAAY;IAAZA,YAAY,GAAAD,iBAAA,cAAG,WAAW,GAAAA,iBAAA;IAC1BE,QAAQ,GAUFP,IAAA,CAVNO,QAAQ;IACRC,aAAa,GASPR,IAAA,CATNQ,aAAa;IAAAC,qBAAA,GASPT,IAAA,CARNU,qBAAqB;IAArBA,qBAAqB,GAAAD,qBAAA,cAAG,CAAC,GAAAA,qBAAA;IAAAE,oBAAA,GAQnBX,IAAA,CAPNY,eAAe;IAAfA,eAAe,GAAAD,oBAAA,cAAG,YAAY,GAAAA,oBAAA;IAC9BE,IAAI,GAMEb,IAAA,CANNa,IAAI;IACJC,SAAS,GAKHd,IAAA,CALNc,SAAS;IACTC,KAAK,GAICf,IAAA,CAJNe,KAAK;IACLC,UAAU,GAGJhB,IAAA,CAHNgB,UAAU;IACVC,KAAK,GAECjB,IAAA,CAFNiB,KAAK;IACEC,cAAA,GACDlB,IAAA,CADNmB,KAAK;EAEL,IAAMA,KAAK,GAAGzB,gBAAgB,CAACwB,cAAc,CAAC;EAC9C,IAAME,cAAc,GAAGD,KAAK,CAACE,IAAI,GAAG1B,IAAI,GAAGE,KAAK;EAChD,IAAMyB,iBAAiB,GAAGH,KAAK,CAACE,IAAI,GAAG1B,IAAI,GAAGC,OAAO;EAErD,IAAM2B,SAAS,GAAGhB,QAAQ,IAAIM,IAAI,IAAIE,KAAK,GAAG,EAAE,GAAG,EAAE;EACrD,IAAMS,YAAY,GAAGjB,QAAQ,GAAG,CAAC,GAAG,CAAC;EAErC,OACEhB,KAAA,CAAAkC,aAAA,CAAChC,IAAI;IAACwB,KAAK,EAAE,CAACS,MAAM,CAACC,SAAS,EAAE;MAAEJ,SAAA,EAAAA;IAAU,CAAC,EAAEN,KAAK;EAAE,GACnDJ,IAAI,GACHtB,KAAA,CAAAkC,aAAA,CAAChC,IAAI;IAACwB,KAAK,EAAE,CAACS,MAAM,CAACb,IAAI,EAAEC,SAAS;EAAE,GACnCD,IAAI,CAAC;IACJe,IAAI,EAAE9B;EACR,CAAC,CAAC,CACG,GACL,IAAI,EAERP,KAAA,CAAAkC,aAAA,CAAChC,IAAI;IAACwB,KAAK,EAAE,CAACS,MAAM,CAACG,MAAM;EAAE,GAC1B5B,KAAK,IACJV,KAAA,CAAAkC,aAAA,CAACL,cAAc;IACbH,KAAK,EAAE,CAACS,MAAM,CAACzB,KAAK,EAAE;MAAEuB,YAAA,EAAAA;IAAa,CAAC,EAAEtB,UAAU,CAAE;IACpD4B,aAAa,EAAE1B,kBAAmB;IAClC2B,OAAO,EAAEzB;EAAa,GAErBL,KAAK,CAET,EACAM,QAAQ,IACPhB,KAAA,CAAAkC,aAAA,CAACH,iBAAiB;IAChBL,KAAK,EAAE,CAACS,MAAM,CAACnB,QAAQ,EAAEC,aAAa,CAAE;IACxCsB,aAAa,EAAEpB,qBAAsB;IACrCqB,OAAO,EAAEnB;EAAgB,GAExBL,QAAQ,CAEZ,CACI,EACPhB,KAAA,CAAAkC,aAAA,CAAChC,IAAI;IAACwB,KAAK,EAAED;EAAW,GAAED,KAAK,GAAGA,KAAK,CAAC;IAAEa,IAAI,EAAE;EAAG,CAAC,CAAC,GAAG,IAAI,CAAQ,CAC/D;AAEX,CAAC;AAED7B,SAAS,CAACiC,WAAW,GAAG,YAAY;AAEpC,IAAMN,MAAM,GAAGlC,UAAU,CAACyC,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,eAAe;IAC/BC,WAAW,EAAE;EACf,CAAC;EAEDxB,IAAI,EAAE;IACJuB,cAAc,EAAE,QAAQ;IACxBE,WAAW,EAAE,EAAE;IACfC,MAAM,EAAEzC,SAAS;IACjB0C,KAAK,EAAE1C;EACT,CAAC;EAED+B,MAAM,EAAE;IACNY,IAAI,EAAE,CAAC;IACPP,aAAa,EAAE,QAAQ;IACvBE,cAAc,EAAE;EAClB,CAAC;EAEDnC,KAAK,EAAE;IACLsB,SAAS,EAAE,EAAE;IACbmB,YAAY,EAAE;EAChB,CAAC;EAEDnC,QAAQ,EAAE;IACRgB,SAAS,EAAE,EAAE;IACboB,cAAc,EAAE,CAAC;IACjBD,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAe3C,SAAS;AAGxB,SAASA,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}