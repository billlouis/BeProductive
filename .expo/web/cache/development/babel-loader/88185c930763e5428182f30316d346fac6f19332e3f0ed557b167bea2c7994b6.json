{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"title\", \"titleStyle\", \"style\", \"theme\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport ListSubheader from \"./ListSubheader\";\nvar ListSection = function ListSection(_ref) {\n  var children = _ref.children,\n    title = _ref.title,\n    titleStyle = _ref.titleStyle,\n    style = _ref.style,\n    themeOverrides = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var viewProps = _objectSpread(_objectSpread({}, rest), {}, {\n    theme: theme\n  });\n  return React.createElement(View, _extends({}, viewProps, {\n    style: [styles.container, style]\n  }), title ? React.createElement(ListSubheader, {\n    style: titleStyle,\n    theme: theme\n  }, title) : null, children);\n};\nListSection.displayName = 'List.Section';\nvar styles = StyleSheet.create({\n  container: {\n    marginVertical: 8\n  }\n});\nexport default ListSection;","map":{"version":3,"names":["React","StyleSheet","View","useInternalTheme","ListSubheader","ListSection","_ref","children","title","titleStyle","style","themeOverrides","theme","rest","_objectWithoutProperties","_excluded","viewProps","_objectSpread","createElement","_extends","styles","container","displayName","create","marginVertical"],"sources":["D:\\software_studio\\final project\\beprod\\BeProductive\\node_modules\\react-native-paper\\src\\components\\List\\ListSection.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport ListSubheader from './ListSubheader';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Title text for the section.\n   */\n  title?: string;\n  /**\n   * Content of the section.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Style that is passed to Title element.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component used to group list items.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/list-section.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List, MD3Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <List.Section>\n *     <List.Subheader>Some title</List.Subheader>\n *     <List.Item title=\"First Item\" left={() => <List.Icon icon=\"folder\" />} />\n *     <List.Item\n *       title=\"Second Item\"\n *       left={() => <List.Icon color={MD3Colors.tertiary70} icon=\"folder\" />}\n *     />\n *   </List.Section>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ListSection = ({\n  children,\n  title,\n  titleStyle,\n  style,\n  theme: themeOverrides,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const viewProps = { ...rest, theme };\n\n  return (\n    <View {...viewProps} style={[styles.container, style]}>\n      {title ? (\n        <ListSubheader style={titleStyle} theme={theme}>\n          {title}\n        </ListSubheader>\n      ) : null}\n      {children}\n    </View>\n  );\n};\n\nListSection.displayName = 'List.Section';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginVertical: 8,\n  },\n});\n\nexport default ListSection;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAS9B,SAASC,gBAAgB;AAEzB,OAAOC,aAAa;AAgDpB,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAGC,IAAA,EAOP;EAAA,IANXC,QAAQ,GAMFD,IAAA,CANNC,QAAQ;IACRC,KAAK,GAKCF,IAAA,CALNE,KAAK;IACLC,UAAU,GAIJH,IAAA,CAJNG,UAAU;IACVC,KAAK,GAGCJ,IAAA,CAHNI,KAAK;IACEC,cAAc,GAEfL,IAAA,CAFNM,KAAK;IACFC,IAAA,GAAAC,wBAAA,CACGR,IAAA,EAAAS,SAAA;EACN,IAAMH,KAAK,GAAGT,gBAAgB,CAACQ,cAAc,CAAC;EAC9C,IAAMK,SAAS,GAAAC,aAAA,CAAAA,aAAA,KAAQJ,IAAI;IAAED,KAAA,EAAAA;EAAA,EAAO;EAEpC,OACEZ,KAAA,CAAAkB,aAAA,CAAChB,IAAI,EAAAiB,QAAA,KAAKH,SAAS;IAAEN,KAAK,EAAE,CAACU,MAAM,CAACC,SAAS,EAAEX,KAAK;EAAE,IACnDF,KAAK,GACJR,KAAA,CAAAkB,aAAA,CAACd,aAAa;IAACM,KAAK,EAAED,UAAW;IAACG,KAAK,EAAEA;EAAM,GAC5CJ,KAAK,CACQ,GACd,IAAI,EACPD,QAAQ,CACJ;AAEX,CAAC;AAEDF,WAAW,CAACiB,WAAW,GAAG,cAAc;AAExC,IAAMF,MAAM,GAAGnB,UAAU,CAACsB,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTG,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAenB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}