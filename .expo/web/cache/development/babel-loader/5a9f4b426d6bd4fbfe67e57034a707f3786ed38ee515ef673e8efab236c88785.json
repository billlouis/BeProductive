{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport color from 'color';\nimport { AdornmentSide, AdornmentType } from \"./Adornment/enums\";\nimport { ADORNMENT_SIZE, MD2_ADORNMENT_OFFSET, MD2_AFFIX_OFFSET, MD2_FLAT_INPUT_OFFSET, MD2_ICON_OFFSET, MD2_INPUT_PADDING_HORIZONTAL, MD2_LABEL_PADDING_HORIZONTAL, MD2_LABEL_PADDING_TOP, MD2_MIN_HEIGHT, MD2_OUTLINED_INPUT_OFFSET, MD3_ADORNMENT_OFFSET, MD3_AFFIX_OFFSET, MD3_FLAT_INPUT_OFFSET, MD3_ICON_OFFSET, MD3_INPUT_PADDING_HORIZONTAL, MD3_LABEL_PADDING_HORIZONTAL, MD3_LABEL_PADDING_TOP, MD3_MIN_HEIGHT, MD3_OUTLINED_INPUT_OFFSET } from \"./constants\";\nexport var calculateLabelTopPosition = function calculateLabelTopPosition(labelHeight) {\n  var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var optionalPadding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var customHeight = height > 0 ? height : 0;\n  return Math.floor((customHeight - labelHeight) / 2 + optionalPadding);\n};\nexport var calculateInputHeight = function calculateInputHeight(labelHeight) {\n  var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var minHeight = arguments.length > 2 ? arguments[2] : undefined;\n  var finalHeight = height > 0 ? height : labelHeight;\n  if (height > 0) return height;\n  return finalHeight < minHeight ? minHeight : finalHeight;\n};\nexport var calculatePadding = function calculatePadding(props) {\n  var height = props.height,\n    _props$multiline = props.multiline,\n    multiline = _props$multiline === void 0 ? false : _props$multiline;\n  var result = 0;\n  if (multiline) {\n    if (height && multiline) {\n      result = calculateTextAreaPadding(props);\n    } else {\n      result = calculateInputPadding(props);\n    }\n  }\n  return Math.max(0, result);\n};\nvar calculateTextAreaPadding = function calculateTextAreaPadding(props) {\n  var dense = props.dense;\n  return dense ? 10 : 20;\n};\nvar calculateInputPadding = function calculateInputPadding(_ref) {\n  var topPosition = _ref.topPosition,\n    fontSize = _ref.fontSize,\n    multiline = _ref.multiline,\n    scale = _ref.scale,\n    dense = _ref.dense,\n    offset = _ref.offset,\n    isAndroid = _ref.isAndroid;\n  var refFontSize = scale * fontSize;\n  var result = Math.floor(topPosition / 2);\n  result = result + Math.floor((refFontSize - fontSize) / 2) - (scale < 1 ? offset / 2 : 0);\n  if (multiline && isAndroid) result = Math.min(dense ? offset / 2 : offset, result);\n  return result;\n};\nexport var adjustPaddingOut = function adjustPaddingOut(_ref2) {\n  var pad = _ref2.pad,\n    multiline = _ref2.multiline,\n    label = _ref2.label,\n    scale = _ref2.scale,\n    height = _ref2.height,\n    fontSize = _ref2.fontSize,\n    lineHeight = _ref2.lineHeight,\n    dense = _ref2.dense,\n    offset = _ref2.offset,\n    isAndroid = _ref2.isAndroid;\n  var fontHeight = lineHeight != null ? lineHeight : fontSize;\n  var refFontHeight = scale * fontSize;\n  var result = pad;\n  if (height && !multiline) {\n    return {\n      paddingTop: Math.max(0, (height - fontHeight) / 2),\n      paddingBottom: Math.max(0, (height - fontHeight) / 2)\n    };\n  }\n  if (!isAndroid && multiline) {\n    if (dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, refFontHeight / 2 * scale) : 0;\n      } else {\n        result += 0;\n      }\n    }\n    if (!dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, refFontHeight * scale) : Math.min(offset / 2, refFontHeight * scale);\n      } else {\n        result += scale < 1 ? Math.min(offset / 2, refFontHeight * scale) : 0;\n      }\n    }\n    result = Math.floor(result);\n  }\n  return {\n    paddingTop: result,\n    paddingBottom: result\n  };\n};\nexport var adjustPaddingFlat = function adjustPaddingFlat(_ref3) {\n  var pad = _ref3.pad,\n    scale = _ref3.scale,\n    multiline = _ref3.multiline,\n    label = _ref3.label,\n    height = _ref3.height,\n    offset = _ref3.offset,\n    dense = _ref3.dense,\n    fontSize = _ref3.fontSize,\n    isAndroid = _ref3.isAndroid,\n    styles = _ref3.styles;\n  var result = pad;\n  var topResult = result;\n  var bottomResult = result;\n  var paddingTop = styles.paddingTop,\n    paddingBottom = styles.paddingBottom;\n  var refFontSize = scale * fontSize;\n  if (!multiline) {\n    if (label) {\n      return {\n        paddingTop: paddingTop,\n        paddingBottom: paddingBottom\n      };\n    }\n    return {\n      paddingTop: result,\n      paddingBottom: result\n    };\n  }\n  if (label) {\n    topResult = paddingTop;\n    bottomResult = paddingBottom;\n    if (!isAndroid) {\n      if (dense) {\n        topResult += scale < 1 ? Math.min(result, refFontSize * scale) - result / 2 : Math.min(result, refFontSize * scale) - result / 2;\n      }\n      if (!dense) {\n        topResult += scale < 1 ? Math.min(offset / 2, refFontSize * scale) : Math.min(result, refFontSize * scale) - offset / 2;\n      }\n    }\n    topResult = Math.floor(topResult);\n  } else {\n    if (height) {\n      return {\n        paddingTop: Math.max(0, (height - fontSize) / 2),\n        paddingBottom: Math.max(0, (height - fontSize) / 2)\n      };\n    }\n    if (!isAndroid) {\n      if (dense) {\n        result += scale < 1 ? Math.min(offset / 2, fontSize / 2 * scale) : Math.min(offset / 2, scale);\n      }\n      if (!dense) {\n        result += scale < 1 ? Math.min(offset, fontSize * scale) : Math.min(fontSize, offset / 2 * scale);\n      }\n      result = Math.floor(result);\n      topResult = result;\n      bottomResult = result;\n    }\n  }\n  return {\n    paddingTop: Math.max(0, topResult),\n    paddingBottom: Math.max(0, bottomResult)\n  };\n};\nexport function calculateFlatAffixTopPosition(_ref4) {\n  var height = _ref4.height,\n    paddingTop = _ref4.paddingTop,\n    paddingBottom = _ref4.paddingBottom,\n    affixHeight = _ref4.affixHeight;\n  var inputHeightWithoutPadding = height - paddingTop - paddingBottom;\n  var halfOfTheInputHeightDecreasedByAffixHeight = (inputHeightWithoutPadding - affixHeight) / 2;\n  return paddingTop + halfOfTheInputHeightDecreasedByAffixHeight;\n}\nexport function calculateOutlinedIconAndAffixTopPosition(_ref5) {\n  var height = _ref5.height,\n    affixHeight = _ref5.affixHeight,\n    labelYOffset = _ref5.labelYOffset;\n  return (height - affixHeight + labelYOffset) / 2;\n}\nexport var calculateFlatInputHorizontalPadding = function calculateFlatInputHorizontalPadding(_ref6) {\n  var adornmentConfig = _ref6.adornmentConfig,\n    isV3 = _ref6.isV3;\n  var _getConstants = getConstants(isV3),\n    LABEL_PADDING_HORIZONTAL = _getConstants.LABEL_PADDING_HORIZONTAL,\n    ADORNMENT_OFFSET = _getConstants.ADORNMENT_OFFSET,\n    FLAT_INPUT_OFFSET = _getConstants.FLAT_INPUT_OFFSET;\n  var paddingLeft = LABEL_PADDING_HORIZONTAL;\n  var paddingRight = LABEL_PADDING_HORIZONTAL;\n  adornmentConfig.forEach(function (_ref7) {\n    var type = _ref7.type,\n      side = _ref7.side;\n    if (type === AdornmentType.Icon && side === AdornmentSide.Left) {\n      paddingLeft = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n    } else if (side === AdornmentSide.Right) {\n      if (type === AdornmentType.Affix) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      } else if (type === AdornmentType.Icon) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      }\n    }\n  });\n  return {\n    paddingLeft: paddingLeft,\n    paddingRight: paddingRight\n  };\n};\nvar getInputTextColor = function getInputTextColor(_ref8) {\n  var theme = _ref8.theme,\n    textColor = _ref8.textColor,\n    disabled = _ref8.disabled,\n    mode = _ref8.mode;\n  var isFlat = mode === 'flat';\n  if (textColor) {\n    return textColor;\n  }\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    if (isFlat) {\n      return theme.colors.onSurfaceVariant;\n    }\n    return theme.colors.onSurface;\n  }\n  if (disabled) {\n    return color(theme.colors.text).alpha(0.54).rgb().string();\n  }\n  return theme.colors.text;\n};\nvar getActiveColor = function getActiveColor(_ref9) {\n  var theme = _ref9.theme,\n    disabled = _ref9.disabled,\n    error = _ref9.error,\n    activeUnderlineColor = _ref9.activeUnderlineColor,\n    activeOutlineColor = _ref9.activeOutlineColor,\n    mode = _ref9.mode;\n  var isFlat = mode === 'flat';\n  var modeColor = isFlat ? activeUnderlineColor : activeOutlineColor;\n  if (error) {\n    return theme.colors.error;\n  }\n  if (modeColor) {\n    return modeColor;\n  }\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return color(theme.colors.text).alpha(0.54).rgb().string();\n  }\n  return theme.colors.primary;\n};\nvar getPlaceholderColor = function getPlaceholderColor(_ref10) {\n  var theme = _ref10.theme,\n    disabled = _ref10.disabled;\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.onSurfaceVariant;\n  }\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n  return theme.colors.placeholder;\n};\nvar getFlatBackgroundColor = function getFlatBackgroundColor(_ref11) {\n  var _theme$colors, _theme$colors2;\n  var theme = _ref11.theme,\n    disabled = _ref11.disabled;\n  if (theme.isV3) {\n    if (disabled) {\n      return color(theme.colors.onSurface).alpha(0.04).rgb().string();\n    } else {\n      return theme.colors.surfaceVariant;\n    }\n  }\n  if (disabled) {\n    return undefined;\n  }\n  return theme.dark ? color((_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.background).lighten(0.24).rgb().string() : color((_theme$colors2 = theme.colors) === null || _theme$colors2 === void 0 ? void 0 : _theme$colors2.background).darken(0.06).rgb().string();\n};\nvar getFlatUnderlineColor = function getFlatUnderlineColor(_ref12) {\n  var theme = _ref12.theme,\n    disabled = _ref12.disabled,\n    underlineColor = _ref12.underlineColor;\n  if (!disabled && underlineColor) {\n    return underlineColor;\n  }\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.onSurface;\n  }\n  if (disabled) {\n    return 'transparent';\n  }\n  return theme.colors.disabled;\n};\nvar getOutlinedOutlineInputColor = function getOutlinedOutlineInputColor(_ref13) {\n  var theme = _ref13.theme,\n    disabled = _ref13.disabled,\n    customOutlineColor = _ref13.customOutlineColor;\n  var isTransparent = color(customOutlineColor).alpha() === 0;\n  if (!disabled && customOutlineColor) {\n    return customOutlineColor;\n  }\n  if (theme.isV3) {\n    if (disabled) {\n      if (theme.dark) {\n        return 'transparent';\n      }\n      return theme.colors.surfaceDisabled;\n    }\n    return theme.colors.outline;\n  }\n  if (disabled) {\n    if (isTransparent) {\n      return customOutlineColor;\n    }\n    return theme.colors.disabled;\n  }\n  return theme.colors.placeholder;\n};\nexport var getFlatInputColors = function getFlatInputColors(_ref14) {\n  var underlineColor = _ref14.underlineColor,\n    activeUnderlineColor = _ref14.activeUnderlineColor,\n    textColor = _ref14.textColor,\n    disabled = _ref14.disabled,\n    error = _ref14.error,\n    theme = _ref14.theme;\n  var baseFlatColorProps = {\n    theme: theme,\n    disabled: disabled\n  };\n  return {\n    inputTextColor: getInputTextColor(_objectSpread(_objectSpread({}, baseFlatColorProps), {}, {\n      textColor: textColor,\n      mode: 'flat'\n    })),\n    activeColor: getActiveColor(_objectSpread(_objectSpread({}, baseFlatColorProps), {}, {\n      error: error,\n      activeUnderlineColor: activeUnderlineColor,\n      mode: 'flat'\n    })),\n    underlineColorCustom: getFlatUnderlineColor(_objectSpread(_objectSpread({}, baseFlatColorProps), {}, {\n      underlineColor: underlineColor\n    })),\n    placeholderColor: getPlaceholderColor(baseFlatColorProps),\n    errorColor: theme.colors.error,\n    backgroundColor: getFlatBackgroundColor(baseFlatColorProps)\n  };\n};\nexport var getOutlinedInputColors = function getOutlinedInputColors(_ref15) {\n  var activeOutlineColor = _ref15.activeOutlineColor,\n    customOutlineColor = _ref15.customOutlineColor,\n    textColor = _ref15.textColor,\n    disabled = _ref15.disabled,\n    error = _ref15.error,\n    theme = _ref15.theme;\n  var baseOutlinedColorProps = {\n    theme: theme,\n    disabled: disabled\n  };\n  return {\n    inputTextColor: getInputTextColor(_objectSpread(_objectSpread({}, baseOutlinedColorProps), {}, {\n      textColor: textColor,\n      mode: 'outlined'\n    })),\n    activeColor: getActiveColor(_objectSpread(_objectSpread({}, baseOutlinedColorProps), {}, {\n      error: error,\n      activeOutlineColor: activeOutlineColor,\n      mode: 'outlined'\n    })),\n    outlineColor: getOutlinedOutlineInputColor(_objectSpread(_objectSpread({}, baseOutlinedColorProps), {}, {\n      customOutlineColor: customOutlineColor\n    })),\n    placeholderColor: getPlaceholderColor(baseOutlinedColorProps),\n    errorColor: theme.colors.error\n  };\n};\nexport var getConstants = function getConstants(isV3) {\n  var AFFIX_OFFSET;\n  var ICON_OFFSET;\n  var LABEL_PADDING_TOP;\n  var LABEL_PADDING_HORIZONTAL;\n  var FLAT_INPUT_OFFSET;\n  var MIN_HEIGHT;\n  var INPUT_PADDING_HORIZONTAL;\n  var ADORNMENT_OFFSET;\n  var OUTLINED_INPUT_OFFSET;\n  if (isV3) {\n    AFFIX_OFFSET = MD3_AFFIX_OFFSET;\n    ICON_OFFSET = MD3_ICON_OFFSET;\n    LABEL_PADDING_TOP = MD3_LABEL_PADDING_TOP;\n    LABEL_PADDING_HORIZONTAL = MD3_LABEL_PADDING_HORIZONTAL;\n    FLAT_INPUT_OFFSET = MD3_FLAT_INPUT_OFFSET;\n    MIN_HEIGHT = MD3_MIN_HEIGHT;\n    INPUT_PADDING_HORIZONTAL = MD3_INPUT_PADDING_HORIZONTAL;\n    ADORNMENT_OFFSET = MD3_ADORNMENT_OFFSET;\n    OUTLINED_INPUT_OFFSET = MD3_OUTLINED_INPUT_OFFSET;\n  } else {\n    AFFIX_OFFSET = MD2_AFFIX_OFFSET;\n    ICON_OFFSET = MD2_ICON_OFFSET;\n    LABEL_PADDING_TOP = MD2_LABEL_PADDING_TOP;\n    LABEL_PADDING_HORIZONTAL = MD2_LABEL_PADDING_HORIZONTAL;\n    FLAT_INPUT_OFFSET = MD2_FLAT_INPUT_OFFSET;\n    MIN_HEIGHT = MD2_MIN_HEIGHT;\n    INPUT_PADDING_HORIZONTAL = MD2_INPUT_PADDING_HORIZONTAL;\n    ADORNMENT_OFFSET = MD2_ADORNMENT_OFFSET;\n    OUTLINED_INPUT_OFFSET = MD2_OUTLINED_INPUT_OFFSET;\n  }\n  return {\n    AFFIX_OFFSET: AFFIX_OFFSET,\n    ICON_OFFSET: ICON_OFFSET,\n    LABEL_PADDING_TOP: LABEL_PADDING_TOP,\n    LABEL_PADDING_HORIZONTAL: LABEL_PADDING_HORIZONTAL,\n    FLAT_INPUT_OFFSET: FLAT_INPUT_OFFSET,\n    MIN_HEIGHT: MIN_HEIGHT,\n    INPUT_PADDING_HORIZONTAL: INPUT_PADDING_HORIZONTAL,\n    ADORNMENT_OFFSET: ADORNMENT_OFFSET,\n    OUTLINED_INPUT_OFFSET: OUTLINED_INPUT_OFFSET\n  };\n};","map":{"version":3,"names":["color","AdornmentSide","AdornmentType","ADORNMENT_SIZE","MD2_ADORNMENT_OFFSET","MD2_AFFIX_OFFSET","MD2_FLAT_INPUT_OFFSET","MD2_ICON_OFFSET","MD2_INPUT_PADDING_HORIZONTAL","MD2_LABEL_PADDING_HORIZONTAL","MD2_LABEL_PADDING_TOP","MD2_MIN_HEIGHT","MD2_OUTLINED_INPUT_OFFSET","MD3_ADORNMENT_OFFSET","MD3_AFFIX_OFFSET","MD3_FLAT_INPUT_OFFSET","MD3_ICON_OFFSET","MD3_INPUT_PADDING_HORIZONTAL","MD3_LABEL_PADDING_HORIZONTAL","MD3_LABEL_PADDING_TOP","MD3_MIN_HEIGHT","MD3_OUTLINED_INPUT_OFFSET","calculateLabelTopPosition","labelHeight","height","arguments","length","undefined","optionalPadding","customHeight","Math","floor","calculateInputHeight","minHeight","finalHeight","calculatePadding","props","_props$multiline","multiline","result","calculateTextAreaPadding","calculateInputPadding","max","dense","_ref","topPosition","fontSize","scale","offset","isAndroid","refFontSize","min","adjustPaddingOut","_ref2","pad","label","lineHeight","fontHeight","refFontHeight","paddingTop","paddingBottom","adjustPaddingFlat","_ref3","styles","topResult","bottomResult","calculateFlatAffixTopPosition","_ref4","affixHeight","inputHeightWithoutPadding","halfOfTheInputHeightDecreasedByAffixHeight","calculateOutlinedIconAndAffixTopPosition","_ref5","labelYOffset","calculateFlatInputHorizontalPadding","_ref6","adornmentConfig","isV3","_getConstants","getConstants","LABEL_PADDING_HORIZONTAL","ADORNMENT_OFFSET","FLAT_INPUT_OFFSET","paddingLeft","paddingRight","forEach","_ref7","type","side","Icon","Left","Right","Affix","getInputTextColor","_ref8","theme","textColor","disabled","mode","isFlat","colors","onSurfaceDisabled","onSurfaceVariant","onSurface","text","alpha","rgb","string","getActiveColor","_ref9","error","activeUnderlineColor","activeOutlineColor","modeColor","primary","getPlaceholderColor","_ref10","placeholder","getFlatBackgroundColor","_ref11","_theme$colors","_theme$colors2","surfaceVariant","dark","background","lighten","darken","getFlatUnderlineColor","_ref12","underlineColor","getOutlinedOutlineInputColor","_ref13","customOutlineColor","isTransparent","surfaceDisabled","outline","getFlatInputColors","_ref14","baseFlatColorProps","inputTextColor","_objectSpread","activeColor","underlineColorCustom","placeholderColor","errorColor","backgroundColor","getOutlinedInputColors","_ref15","baseOutlinedColorProps","outlineColor","AFFIX_OFFSET","ICON_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","INPUT_PADDING_HORIZONTAL","OUTLINED_INPUT_OFFSET"],"sources":["D:\\software_studio\\final project\\beprod\\BeProductive\\node_modules\\react-native-paper\\src\\components\\TextInput\\helpers.tsx"],"sourcesContent":["import color from 'color';\n\nimport type { InternalTheme } from '../../types';\nimport { AdornmentSide, AdornmentType } from './Adornment/enums';\nimport type { AdornmentConfig } from './Adornment/types';\nimport {\n  ADORNMENT_SIZE,\n  MD2_ADORNMENT_OFFSET,\n  MD2_AFFIX_OFFSET,\n  MD2_FLAT_INPUT_OFFSET,\n  MD2_ICON_OFFSET,\n  MD2_INPUT_PADDING_HORIZONTAL,\n  MD2_LABEL_PADDING_HORIZONTAL,\n  MD2_LABEL_PADDING_TOP,\n  MD2_MIN_HEIGHT,\n  MD2_OUTLINED_INPUT_OFFSET,\n  MD3_ADORNMENT_OFFSET,\n  MD3_AFFIX_OFFSET,\n  MD3_FLAT_INPUT_OFFSET,\n  MD3_ICON_OFFSET,\n  MD3_INPUT_PADDING_HORIZONTAL,\n  MD3_LABEL_PADDING_HORIZONTAL,\n  MD3_LABEL_PADDING_TOP,\n  MD3_MIN_HEIGHT,\n  MD3_OUTLINED_INPUT_OFFSET,\n} from './constants';\nimport type { TextInputLabelProp } from './types';\n\ntype PaddingProps = {\n  height: number | null;\n  labelHalfHeight: number;\n  multiline: boolean | null;\n  dense: boolean | null;\n  topPosition: number;\n  fontSize: number;\n  lineHeight?: number;\n  label?: TextInputLabelProp | null;\n  scale: number;\n  offset: number;\n  isAndroid: boolean;\n  styles: { paddingTop: number; paddingBottom: number };\n};\n\ntype AdjProps = PaddingProps & {\n  pad: number;\n};\n\nexport type Padding = { paddingTop: number; paddingBottom: number };\n\nexport const calculateLabelTopPosition = (\n  labelHeight: number,\n  height: number = 0,\n  optionalPadding: number = 0\n): number => {\n  const customHeight = height > 0 ? height : 0;\n\n  return Math.floor((customHeight - labelHeight) / 2 + optionalPadding);\n};\n\nexport const calculateInputHeight = (\n  labelHeight: number,\n  height: any = 0,\n  minHeight: number\n): number => {\n  const finalHeight = height > 0 ? height : labelHeight;\n\n  if (height > 0) return height;\n  return finalHeight < minHeight ? minHeight : finalHeight;\n};\n\nexport const calculatePadding = (props: PaddingProps): number => {\n  const { height, multiline = false } = props;\n\n  let result = 0;\n\n  if (multiline) {\n    if (height && multiline) {\n      result = calculateTextAreaPadding(props);\n    } else {\n      result = calculateInputPadding(props);\n    }\n  }\n\n  return Math.max(0, result);\n};\n\nconst calculateTextAreaPadding = (props: PaddingProps) => {\n  const { dense } = props;\n\n  return dense ? 10 : 20;\n};\n\nconst calculateInputPadding = ({\n  topPosition,\n  fontSize,\n  multiline,\n  scale,\n  dense,\n  offset,\n  isAndroid,\n}: PaddingProps): number => {\n  const refFontSize = scale * fontSize;\n  let result = Math.floor(topPosition / 2);\n\n  result =\n    result +\n    Math.floor((refFontSize - fontSize) / 2) -\n    (scale < 1 ? offset / 2 : 0);\n\n  if (multiline && isAndroid)\n    result = Math.min(dense ? offset / 2 : offset, result);\n\n  return result;\n};\n\nexport const adjustPaddingOut = ({\n  pad,\n  multiline,\n  label,\n  scale,\n  height,\n  fontSize,\n  lineHeight,\n  dense,\n  offset,\n  isAndroid,\n}: AdjProps): Padding => {\n  const fontHeight = lineHeight ?? fontSize;\n  const refFontHeight = scale * fontSize;\n  let result = pad;\n\n  if (height && !multiline) {\n    return {\n      paddingTop: Math.max(0, (height - fontHeight) / 2),\n      paddingBottom: Math.max(0, (height - fontHeight) / 2),\n    };\n  }\n  if (!isAndroid && multiline) {\n    if (dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, (refFontHeight / 2) * scale) : 0;\n      } else {\n        result += 0;\n      }\n    }\n    if (!dense) {\n      if (label) {\n        result +=\n          scale < 1\n            ? Math.min(offset, refFontHeight * scale)\n            : Math.min(offset / 2, refFontHeight * scale);\n      } else {\n        result += scale < 1 ? Math.min(offset / 2, refFontHeight * scale) : 0;\n      }\n    }\n    result = Math.floor(result);\n  }\n  return { paddingTop: result, paddingBottom: result };\n};\n\nexport const adjustPaddingFlat = ({\n  pad,\n  scale,\n  multiline,\n  label,\n  height,\n  offset,\n  dense,\n  fontSize,\n  isAndroid,\n  styles,\n}: AdjProps): Padding => {\n  let result = pad;\n  let topResult = result;\n  let bottomResult = result;\n  const { paddingTop, paddingBottom } = styles;\n  const refFontSize = scale * fontSize;\n\n  if (!multiline) {\n    // do not modify padding if input is not multiline\n    if (label) {\n      // return const style for flat input with label\n      return { paddingTop, paddingBottom };\n    }\n    // return pad for flat input without label\n    return { paddingTop: result, paddingBottom: result };\n  }\n\n  if (label) {\n    // add paddings passed from styles\n    topResult = paddingTop;\n    bottomResult = paddingBottom;\n\n    // adjust top padding for iOS\n    if (!isAndroid) {\n      if (dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(result, refFontSize * scale) - result / 2\n            : Math.min(result, refFontSize * scale) - result / 2;\n      }\n      if (!dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(offset / 2, refFontSize * scale)\n            : Math.min(result, refFontSize * scale) - offset / 2;\n      }\n    }\n    topResult = Math.floor(topResult);\n  } else {\n    if (height) {\n      // center text when height is passed\n      return {\n        paddingTop: Math.max(0, (height - fontSize) / 2),\n        paddingBottom: Math.max(0, (height - fontSize) / 2),\n      };\n    }\n    // adjust paddings for iOS if no label\n    if (!isAndroid) {\n      if (dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset / 2, (fontSize / 2) * scale)\n            : Math.min(offset / 2, scale);\n      }\n      if (!dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset, fontSize * scale)\n            : Math.min(fontSize, (offset / 2) * scale);\n      }\n\n      result = Math.floor(result);\n      topResult = result;\n      bottomResult = result;\n    }\n  }\n\n  return {\n    paddingTop: Math.max(0, topResult),\n    paddingBottom: Math.max(0, bottomResult),\n  };\n};\n\nexport function calculateFlatAffixTopPosition({\n  height,\n  paddingTop,\n  paddingBottom,\n  affixHeight,\n}: {\n  height: number;\n  paddingTop: number;\n  paddingBottom: number;\n  affixHeight: number;\n}): number {\n  const inputHeightWithoutPadding = height - paddingTop - paddingBottom;\n\n  const halfOfTheInputHeightDecreasedByAffixHeight =\n    (inputHeightWithoutPadding - affixHeight) / 2;\n\n  return paddingTop + halfOfTheInputHeightDecreasedByAffixHeight;\n}\n\nexport function calculateOutlinedIconAndAffixTopPosition({\n  height,\n  affixHeight,\n  labelYOffset,\n}: {\n  height: number;\n  affixHeight: number;\n  labelYOffset: number;\n}): number {\n  return (height - affixHeight + labelYOffset) / 2;\n}\n\nexport const calculateFlatInputHorizontalPadding = ({\n  adornmentConfig,\n  isV3,\n}: {\n  adornmentConfig: AdornmentConfig[];\n  isV3?: boolean;\n}) => {\n  const { LABEL_PADDING_HORIZONTAL, ADORNMENT_OFFSET, FLAT_INPUT_OFFSET } =\n    getConstants(isV3);\n\n  let paddingLeft = LABEL_PADDING_HORIZONTAL;\n  let paddingRight = LABEL_PADDING_HORIZONTAL;\n\n  adornmentConfig.forEach(({ type, side }) => {\n    if (type === AdornmentType.Icon && side === AdornmentSide.Left) {\n      paddingLeft = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n    } else if (side === AdornmentSide.Right) {\n      if (type === AdornmentType.Affix) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      } else if (type === AdornmentType.Icon) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      }\n    }\n  });\n\n  return { paddingLeft, paddingRight };\n};\n\ntype BaseProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n};\n\ntype Mode = 'flat' | 'outlined';\n\nconst getInputTextColor = ({\n  theme,\n  textColor,\n  disabled,\n  mode,\n}: BaseProps & { mode: Mode; textColor?: string }) => {\n  const isFlat = mode === 'flat';\n  if (textColor) {\n    return textColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isFlat) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSurface;\n  }\n\n  if (disabled) {\n    return color(theme.colors.text).alpha(0.54).rgb().string();\n  }\n\n  return theme.colors.text;\n};\n\nconst getActiveColor = ({\n  theme,\n  disabled,\n  error,\n  activeUnderlineColor,\n  activeOutlineColor,\n  mode,\n}: BaseProps & {\n  error?: boolean;\n  activeUnderlineColor?: string;\n  activeOutlineColor?: string;\n  mode?: Mode;\n}) => {\n  const isFlat = mode === 'flat';\n  const modeColor = isFlat ? activeUnderlineColor : activeOutlineColor;\n\n  if (error) {\n    return theme.colors.error;\n  }\n\n  if (modeColor) {\n    return modeColor;\n  }\n\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return color(theme.colors.text).alpha(0.54).rgb().string();\n  }\n\n  return theme.colors.primary;\n};\n\nconst getPlaceholderColor = ({ theme, disabled }: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  return theme.colors.placeholder;\n};\n\nconst getFlatBackgroundColor = ({ theme, disabled }: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return color(theme.colors.onSurface).alpha(0.04).rgb().string();\n    } else {\n      return theme.colors.surfaceVariant;\n    }\n  }\n\n  if (disabled) {\n    return undefined;\n  }\n\n  return theme.dark\n    ? color(theme.colors?.background).lighten(0.24).rgb().string()\n    : color(theme.colors?.background).darken(0.06).rgb().string();\n};\n\nconst getFlatUnderlineColor = ({\n  theme,\n  disabled,\n  underlineColor,\n}: BaseProps & { underlineColor?: string }) => {\n  if (!disabled && underlineColor) {\n    return underlineColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.onSurface;\n  }\n\n  if (disabled) {\n    return 'transparent';\n  }\n\n  return theme.colors.disabled;\n};\n\nconst getOutlinedOutlineInputColor = ({\n  theme,\n  disabled,\n  customOutlineColor,\n}: BaseProps & { customOutlineColor?: string }) => {\n  const isTransparent = color(customOutlineColor).alpha() === 0;\n\n  if (!disabled && customOutlineColor) {\n    return customOutlineColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (theme.dark) {\n        return 'transparent';\n      }\n      return theme.colors.surfaceDisabled;\n    }\n\n    return theme.colors.outline;\n  }\n\n  if (disabled) {\n    if (isTransparent) {\n      return customOutlineColor;\n    }\n    return theme.colors.disabled;\n  }\n  return theme.colors.placeholder;\n};\n\nexport const getFlatInputColors = ({\n  underlineColor,\n  activeUnderlineColor,\n  textColor,\n  disabled,\n  error,\n  theme,\n}: {\n  underlineColor?: string;\n  activeUnderlineColor?: string;\n  textColor?: string;\n  disabled?: boolean;\n  error?: boolean;\n  theme: InternalTheme;\n}) => {\n  const baseFlatColorProps = { theme, disabled };\n  return {\n    inputTextColor: getInputTextColor({\n      ...baseFlatColorProps,\n      textColor,\n      mode: 'flat',\n    }),\n    activeColor: getActiveColor({\n      ...baseFlatColorProps,\n      error,\n      activeUnderlineColor,\n      mode: 'flat',\n    }),\n    underlineColorCustom: getFlatUnderlineColor({\n      ...baseFlatColorProps,\n      underlineColor,\n    }),\n    placeholderColor: getPlaceholderColor(baseFlatColorProps),\n    errorColor: theme.colors.error,\n    backgroundColor: getFlatBackgroundColor(baseFlatColorProps),\n  };\n};\n\nexport const getOutlinedInputColors = ({\n  activeOutlineColor,\n  customOutlineColor,\n  textColor,\n  disabled,\n  error,\n  theme,\n}: {\n  activeOutlineColor?: string;\n  customOutlineColor?: string;\n  textColor?: string;\n  disabled?: boolean;\n  error?: boolean;\n  theme: InternalTheme;\n}) => {\n  const baseOutlinedColorProps = { theme, disabled };\n\n  return {\n    inputTextColor: getInputTextColor({\n      ...baseOutlinedColorProps,\n      textColor,\n      mode: 'outlined',\n    }),\n    activeColor: getActiveColor({\n      ...baseOutlinedColorProps,\n      error,\n      activeOutlineColor,\n      mode: 'outlined',\n    }),\n    outlineColor: getOutlinedOutlineInputColor({\n      ...baseOutlinedColorProps,\n      customOutlineColor,\n    }),\n    placeholderColor: getPlaceholderColor(baseOutlinedColorProps),\n    errorColor: theme.colors.error,\n  };\n};\n\nexport const getConstants = (isV3?: boolean) => {\n  // Text input affix\n  let AFFIX_OFFSET;\n  // Text input icon\n  let ICON_OFFSET;\n  //Text input flat\n  let LABEL_PADDING_TOP;\n  let LABEL_PADDING_HORIZONTAL;\n  let FLAT_INPUT_OFFSET;\n  let MIN_HEIGHT;\n  // Text input outlined;\n  let INPUT_PADDING_HORIZONTAL;\n  let ADORNMENT_OFFSET;\n  let OUTLINED_INPUT_OFFSET;\n\n  if (isV3) {\n    AFFIX_OFFSET = MD3_AFFIX_OFFSET;\n    ICON_OFFSET = MD3_ICON_OFFSET;\n    LABEL_PADDING_TOP = MD3_LABEL_PADDING_TOP;\n    LABEL_PADDING_HORIZONTAL = MD3_LABEL_PADDING_HORIZONTAL;\n    FLAT_INPUT_OFFSET = MD3_FLAT_INPUT_OFFSET;\n    MIN_HEIGHT = MD3_MIN_HEIGHT;\n    INPUT_PADDING_HORIZONTAL = MD3_INPUT_PADDING_HORIZONTAL;\n    ADORNMENT_OFFSET = MD3_ADORNMENT_OFFSET;\n    OUTLINED_INPUT_OFFSET = MD3_OUTLINED_INPUT_OFFSET;\n  } else {\n    AFFIX_OFFSET = MD2_AFFIX_OFFSET;\n    ICON_OFFSET = MD2_ICON_OFFSET;\n    LABEL_PADDING_TOP = MD2_LABEL_PADDING_TOP;\n    LABEL_PADDING_HORIZONTAL = MD2_LABEL_PADDING_HORIZONTAL;\n    FLAT_INPUT_OFFSET = MD2_FLAT_INPUT_OFFSET;\n    MIN_HEIGHT = MD2_MIN_HEIGHT;\n    INPUT_PADDING_HORIZONTAL = MD2_INPUT_PADDING_HORIZONTAL;\n    ADORNMENT_OFFSET = MD2_ADORNMENT_OFFSET;\n    OUTLINED_INPUT_OFFSET = MD2_OUTLINED_INPUT_OFFSET;\n  }\n\n  return {\n    AFFIX_OFFSET,\n    ICON_OFFSET,\n    LABEL_PADDING_TOP,\n    LABEL_PADDING_HORIZONTAL,\n    FLAT_INPUT_OFFSET,\n    MIN_HEIGHT,\n    INPUT_PADDING_HORIZONTAL,\n    ADORNMENT_OFFSET,\n    OUTLINED_INPUT_OFFSET,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}