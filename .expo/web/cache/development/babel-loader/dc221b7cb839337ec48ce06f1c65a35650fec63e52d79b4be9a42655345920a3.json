{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport firebase from 'firebase/compat/app';\nimport { USER_STATE_CHANGE, USER_POSTS_STATE_CHANGE, USER_FOLLOWING_STATE_CHANGE, USERS_DATA_STATE_CHANGE, USERS_POSTS_STATE_CHANGE, CLEAR_DATA } from \"../constants/index\";\nexport function clearData() {\n  return function (dispatch) {\n    dispatch({\n      type: CLEAR_DATA\n    });\n  };\n}\nexport function fetchUser() {\n  return function (dispatch) {\n    firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).get().then(function (snapshot) {\n      if (snapshot.exists) {\n        dispatch({\n          type: USER_STATE_CHANGE,\n          currentUser: snapshot.data()\n        });\n      } else {\n        console.log('does not exist');\n      }\n    });\n  };\n}\nexport function fetchUserPosts() {\n  return function (dispatch) {\n    firebase.firestore().collection(\"posts\").doc(firebase.auth().currentUser.uid).collection(\"userPosts\").orderBy(\"creation\", \"asc\").get().then(function (snapshot) {\n      var posts = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      dispatch({\n        type: USER_POSTS_STATE_CHANGE,\n        posts: posts\n      });\n    });\n  };\n}\nexport function fetchUserFollowing() {\n  return function (dispatch) {\n    firebase.firestore().collection(\"following\").doc(firebase.auth().currentUser.uid).collection(\"userFollowing\").onSnapshot(function (snapshot) {\n      var following = snapshot.docs.map(function (doc) {\n        var id = doc.id;\n        return id;\n      });\n      dispatch({\n        type: USER_FOLLOWING_STATE_CHANGE,\n        following: following\n      });\n      for (var i = 0; i < following.length; i++) {\n        dispatch(fetchUsersData(following[i]));\n      }\n    });\n  };\n}\nexport function fetchUsersData(uid) {\n  return function (dispatch, getState) {\n    var found = getState().usersState.users.some(function (el) {\n      return el.uid === uid;\n    });\n    if (!found) {\n      firebase.firestore().collection(\"users\").doc(uid).get().then(function (snapshot) {\n        if (snapshot.exists) {\n          var user = snapshot.data();\n          user.uid = snapshot.id;\n          dispatch({\n            type: USERS_DATA_STATE_CHANGE,\n            user: user\n          });\n          dispatch(fetchUsersFollowingPosts(user.uid));\n        } else {\n          console.log('does not exist');\n        }\n      });\n    }\n  };\n}\nexport function fetchUsersFollowingPosts(uid) {\n  return function (dispatch, getState) {\n    firebase.firestore().collection(\"posts\").doc(uid).collection(\"userPosts\").orderBy(\"creation\", \"asc\").get().then(function (snapshot) {\n      var uid = snapshot.query._delegate._query.path.segments[1];\n      var user = getState().usersState.users.find(function (el) {\n        return el.uid === uid;\n      });\n      var posts = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread(_objectSpread({\n          id: id\n        }, data), {}, {\n          user: user\n        });\n      });\n      dispatch({\n        type: USERS_POSTS_STATE_CHANGE,\n        posts: posts,\n        uid: uid\n      });\n      console.log(getState());\n    });\n  };\n}","map":{"version":3,"names":["firebase","USER_STATE_CHANGE","USER_POSTS_STATE_CHANGE","USER_FOLLOWING_STATE_CHANGE","USERS_DATA_STATE_CHANGE","USERS_POSTS_STATE_CHANGE","CLEAR_DATA","clearData","dispatch","type","fetchUser","firestore","collection","doc","auth","currentUser","uid","get","then","snapshot","exists","data","console","log","fetchUserPosts","orderBy","posts","docs","map","id","_objectSpread","fetchUserFollowing","onSnapshot","following","i","length","fetchUsersData","getState","found","usersState","users","some","el","user","fetchUsersFollowingPosts","query","_delegate","_query","path","segments","find"],"sources":["C:/Users/jmf03/Desktop/Software studios/FINAL PROJECT/BeProductive/redux/actions/index.js"],"sourcesContent":["import firebase from 'firebase/compat/app'\r\nimport { USER_STATE_CHANGE, USER_POSTS_STATE_CHANGE, USER_FOLLOWING_STATE_CHANGE,USERS_DATA_STATE_CHANGE ,USERS_POSTS_STATE_CHANGE, CLEAR_DATA} from '../constants/index'\r\n\r\nexport function clearData(){\r\n    return ((dispatch)=>{\r\n        dispatch({type: CLEAR_DATA})\r\n    })\r\n}\r\nexport function fetchUser() {\r\n    return ((dispatch) => {\r\n        firebase.firestore()\r\n            .collection(\"users\")\r\n            .doc(firebase.auth().currentUser.uid)\r\n            .get()\r\n            .then((snapshot) => {\r\n                if (snapshot.exists) {\r\n                    dispatch({ type: USER_STATE_CHANGE, currentUser: snapshot.data() })\r\n                }\r\n                else {\r\n                    console.log('does not exist')\r\n                }\r\n            })\r\n    })\r\n}\r\n\r\nexport function fetchUserPosts() {\r\n    return ((dispatch) => {\r\n        firebase.firestore()\r\n            .collection(\"posts\")\r\n            .doc(firebase.auth().currentUser.uid)\r\n            .collection(\"userPosts\")\r\n            .orderBy(\"creation\", \"asc\")\r\n            .get()\r\n            .then((snapshot) => {\r\n                let posts = snapshot.docs.map(doc => {\r\n                    const data = doc.data();\r\n                    const id = doc.id;\r\n                    return { id, ...data }\r\n                })\r\n                dispatch({ type: USER_POSTS_STATE_CHANGE, posts })\r\n            })\r\n    })\r\n}\r\n\r\nexport function fetchUserFollowing() {\r\n    return ((dispatch) => {\r\n        firebase.firestore()\r\n            .collection(\"following\")\r\n            .doc(firebase.auth().currentUser.uid)\r\n            .collection(\"userFollowing\")\r\n            .onSnapshot((snapshot) => {\r\n                let following = snapshot.docs.map(doc => {\r\n                    const id = doc.id;\r\n                    return id\r\n                })\r\n                dispatch({ type: USER_FOLLOWING_STATE_CHANGE, following });\r\n                for(let i = 0; i < following.length; i++){\r\n                    dispatch(fetchUsersData(following[i]));\r\n                }\r\n            })\r\n    })\r\n}\r\n\r\nexport function fetchUsersData(uid) {\r\n    return ((dispatch, getState) => {\r\n        const found = getState().usersState.users.some(el => el.uid === uid);\r\n        if (!found) {\r\n            firebase.firestore()\r\n                .collection(\"users\")\r\n                .doc(uid)\r\n                .get()\r\n                .then((snapshot) => {\r\n                    if (snapshot.exists) {\r\n                        let user = snapshot.data();\r\n                        user.uid = snapshot.id;\r\n\r\n                        dispatch({ type: USERS_DATA_STATE_CHANGE, user });\r\n                        dispatch(fetchUsersFollowingPosts(user.uid));\r\n                    }\r\n                    else {\r\n                        console.log('does not exist')\r\n                    }\r\n                })\r\n        }\r\n    })\r\n}\r\n\r\nexport function fetchUsersFollowingPosts(uid) {\r\n    return ((dispatch, getState) => {\r\n        firebase.firestore()\r\n            .collection(\"posts\")\r\n            .doc(uid)\r\n            .collection(\"userPosts\")\r\n            .orderBy(\"creation\", \"asc\")\r\n            .get()\r\n            .then((snapshot) => {\r\n                const uid = snapshot.query._delegate._query.path.segments[1];\r\n                const user = getState().usersState.users.find(el => el.uid === uid);\r\n\r\n\r\n                let posts = snapshot.docs.map(doc => {\r\n                    const data = doc.data();\r\n                    const id = doc.id;\r\n                    return { id, ...data, user }\r\n                })\r\n                dispatch({ type: USERS_POSTS_STATE_CHANGE, posts, uid })\r\n                console.log(getState());\r\n\r\n            })\r\n    })\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}