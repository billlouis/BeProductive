{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"disabled\", \"compact\", \"mode\", \"dark\", \"loading\", \"icon\", \"buttonColor\", \"textColor\", \"rippleColor\", \"children\", \"accessibilityLabel\", \"accessibilityHint\", \"onPress\", \"onPressIn\", \"onPressOut\", \"onLongPress\", \"delayLongPress\", \"style\", \"theme\", \"uppercase\", \"contentStyle\", \"labelStyle\", \"testID\", \"accessible\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { useInternalTheme } from \"../../core/theming\";\nimport hasTouchHandler from \"../../utils/hasTouchHandler\";\nimport ActivityIndicator from \"../ActivityIndicator\";\nimport Icon from \"../Icon\";\nimport Surface from \"../Surface\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nimport { getButtonColors } from \"./utils\";\nvar Button = function Button(_ref) {\n  var _borderRadius;\n  var _StyleSheet$flatten;\n  var disabled = _ref.disabled,\n    compact = _ref.compact,\n    _ref$mode = _ref.mode,\n    mode = _ref$mode === void 0 ? 'text' : _ref$mode,\n    dark = _ref.dark,\n    loading = _ref.loading,\n    icon = _ref.icon,\n    customButtonColor = _ref.buttonColor,\n    customTextColor = _ref.textColor,\n    customRippleColor = _ref.rippleColor,\n    children = _ref.children,\n    accessibilityLabel = _ref.accessibilityLabel,\n    accessibilityHint = _ref.accessibilityHint,\n    onPress = _ref.onPress,\n    onPressIn = _ref.onPressIn,\n    onPressOut = _ref.onPressOut,\n    onLongPress = _ref.onLongPress,\n    delayLongPress = _ref.delayLongPress,\n    style = _ref.style,\n    themeOverrides = _ref.theme,\n    uppercaseProp = _ref.uppercase,\n    contentStyle = _ref.contentStyle,\n    labelStyle = _ref.labelStyle,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'button' : _ref$testID,\n    accessible = _ref.accessible,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var isMode = React.useCallback(function (modeToCompare) {\n    return mode === modeToCompare;\n  }, [mode]);\n  var roundness = theme.roundness,\n    isV3 = theme.isV3,\n    animation = theme.animation;\n  var uppercase = uppercaseProp != null ? uppercaseProp : !theme.isV3;\n  var hasPassedTouchHandler = hasTouchHandler({\n    onPress: onPress,\n    onPressIn: onPressIn,\n    onPressOut: onPressOut,\n    onLongPress: onLongPress\n  });\n  var isElevationEntitled = !disabled && (isV3 ? isMode('elevated') : isMode('contained'));\n  var initialElevation = isV3 ? 1 : 2;\n  var activeElevation = isV3 ? 2 : 8;\n  var _React$useRef = React.useRef(new Animated.Value(isElevationEntitled ? initialElevation : 0)),\n    elevation = _React$useRef.current;\n  React.useEffect(function () {\n    elevation.setValue(isElevationEntitled ? initialElevation : 0);\n  }, [isElevationEntitled, elevation, initialElevation]);\n  var handlePressIn = function handlePressIn(e) {\n    onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(e);\n    if (isV3 ? isMode('elevated') : isMode('contained')) {\n      var scale = animation.scale;\n      Animated.timing(elevation, {\n        toValue: activeElevation,\n        duration: 200 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  };\n  var handlePressOut = function handlePressOut(e) {\n    onPressOut === null || onPressOut === void 0 ? void 0 : onPressOut(e);\n    if (isV3 ? isMode('elevated') : isMode('contained')) {\n      var scale = animation.scale;\n      Animated.timing(elevation, {\n        toValue: initialElevation,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  };\n  var borderRadius = (isV3 ? 5 : 1) * roundness;\n  var iconSize = isV3 ? 18 : 16;\n  var _getButtonColors = getButtonColors({\n      customButtonColor: customButtonColor,\n      customTextColor: customTextColor,\n      theme: theme,\n      mode: mode,\n      disabled: disabled,\n      dark: dark\n    }),\n    backgroundColor = _getButtonColors.backgroundColor,\n    borderColor = _getButtonColors.borderColor,\n    textColor = _getButtonColors.textColor,\n    borderWidth = _getButtonColors.borderWidth;\n  var rippleColor = customRippleColor || color(textColor).alpha(0.12).rgb().string();\n  var buttonStyle = {\n    backgroundColor: backgroundColor,\n    borderColor: borderColor,\n    borderWidth: borderWidth,\n    borderRadius: borderRadius\n  };\n  var touchableStyle = {\n    borderRadius: style ? (_borderRadius = (StyleSheet.flatten(style) || {}).borderRadius) != null ? _borderRadius : borderRadius : borderRadius\n  };\n  var _ref2 = StyleSheet.flatten(labelStyle) || {},\n    customLabelColor = _ref2.color,\n    customLabelSize = _ref2.fontSize;\n  var font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n  var textStyle = _objectSpread({\n    color: textColor\n  }, font);\n  var iconStyle = ((_StyleSheet$flatten = StyleSheet.flatten(contentStyle)) === null || _StyleSheet$flatten === void 0 ? void 0 : _StyleSheet$flatten.flexDirection) === 'row-reverse' ? [styles.iconReverse, isV3 && styles[\"md3IconReverse\" + (compact ? 'Compact' : '')], isV3 && isMode('text') && styles[\"md3IconReverseTextMode\" + (compact ? 'Compact' : '')]] : [styles.icon, isV3 && styles[\"md3Icon\" + (compact ? 'Compact' : '')], isV3 && isMode('text') && styles[\"md3IconTextMode\" + (compact ? 'Compact' : '')]];\n  return React.createElement(Surface, _extends({}, rest, {\n    testID: testID + \"-container\",\n    style: [styles.button, compact && styles.compact, buttonStyle, style, !isV3 && {\n      elevation: elevation\n    }]\n  }, isV3 && {\n    elevation: elevation\n  }), React.createElement(TouchableRipple, {\n    borderless: true,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    onPressIn: hasPassedTouchHandler ? handlePressIn : undefined,\n    onPressOut: hasPassedTouchHandler ? handlePressOut : undefined,\n    delayLongPress: delayLongPress,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityHint: accessibilityHint,\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      disabled: disabled\n    },\n    accessible: accessible,\n    disabled: disabled,\n    rippleColor: rippleColor,\n    style: touchableStyle,\n    testID: testID,\n    theme: theme\n  }, React.createElement(View, {\n    style: [styles.content, contentStyle]\n  }, icon && loading !== true ? React.createElement(View, {\n    style: iconStyle,\n    testID: testID + \"-icon-container\"\n  }, React.createElement(Icon, {\n    source: icon,\n    size: customLabelSize != null ? customLabelSize : iconSize,\n    color: typeof customLabelColor === 'string' ? customLabelColor : textColor\n  })) : null, loading ? React.createElement(ActivityIndicator, {\n    size: customLabelSize != null ? customLabelSize : iconSize,\n    color: typeof customLabelColor === 'string' ? customLabelColor : textColor,\n    style: iconStyle\n  }) : null, React.createElement(Text, {\n    variant: \"labelLarge\",\n    selectable: false,\n    numberOfLines: 1,\n    testID: testID + \"-text\",\n    style: [styles.label, !isV3 && styles.md2Label, isV3 && (isMode('text') ? icon || loading ? styles.md3LabelTextAddons : styles.md3LabelText : styles.md3Label), compact && styles.compactLabel, uppercase && styles.uppercaseLabel, textStyle, labelStyle]\n  }, children))));\n};\nvar styles = StyleSheet.create({\n  button: {\n    minWidth: 64,\n    borderStyle: 'solid'\n  },\n  compact: {\n    minWidth: 'auto'\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    marginLeft: 12,\n    marginRight: -4\n  },\n  iconReverse: {\n    marginRight: 12,\n    marginLeft: -4\n  },\n  md3Icon: {\n    marginLeft: 16,\n    marginRight: -16\n  },\n  md3IconCompact: {\n    marginLeft: 8,\n    marginRight: 0\n  },\n  md3IconReverse: {\n    marginLeft: -16,\n    marginRight: 16\n  },\n  md3IconReverseCompact: {\n    marginLeft: 0,\n    marginRight: 8\n  },\n  md3IconTextMode: {\n    marginLeft: 12,\n    marginRight: -8\n  },\n  md3IconTextModeCompact: {\n    marginLeft: 6,\n    marginRight: 0\n  },\n  md3IconReverseTextMode: {\n    marginLeft: -8,\n    marginRight: 12\n  },\n  md3IconReverseTextModeCompact: {\n    marginLeft: 0,\n    marginRight: 6\n  },\n  label: {\n    textAlign: 'center',\n    marginVertical: 9,\n    marginHorizontal: 16\n  },\n  md2Label: {\n    letterSpacing: 1\n  },\n  compactLabel: {\n    marginHorizontal: 8\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase'\n  },\n  md3Label: {\n    marginVertical: 10,\n    marginHorizontal: 24\n  },\n  md3LabelText: {\n    marginHorizontal: 12\n  },\n  md3LabelTextAddons: {\n    marginHorizontal: 16\n  }\n});\nexport default Button;","map":{"version":3,"names":["React","Animated","StyleSheet","View","color","useInternalTheme","hasTouchHandler","ActivityIndicator","Icon","Surface","TouchableRipple","Text","getButtonColors","Button","_ref","_borderRadius","_StyleSheet$flatten","disabled","compact","_ref$mode","mode","dark","loading","icon","customButtonColor","buttonColor","customTextColor","textColor","customRippleColor","rippleColor","children","accessibilityLabel","accessibilityHint","onPress","onPressIn","onPressOut","onLongPress","delayLongPress","style","themeOverrides","theme","uppercaseProp","uppercase","contentStyle","labelStyle","_ref$testID","testID","accessible","rest","_objectWithoutProperties","_excluded","isMode","useCallback","modeToCompare","roundness","isV3","animation","hasPassedTouchHandler","isElevationEntitled","initialElevation","activeElevation","_React$useRef","useRef","Value","elevation","current","useEffect","setValue","handlePressIn","e","scale","timing","toValue","duration","useNativeDriver","start","handlePressOut","borderRadius","iconSize","_getButtonColors","backgroundColor","borderColor","borderWidth","alpha","rgb","string","buttonStyle","touchableStyle","flatten","_ref2","customLabelColor","customLabelSize","fontSize","font","fonts","labelLarge","medium","textStyle","_objectSpread","iconStyle","flexDirection","styles","iconReverse","createElement","_extends","button","borderless","undefined","accessibilityRole","accessibilityState","content","source","size","variant","selectable","numberOfLines","label","md2Label","md3LabelTextAddons","md3LabelText","md3Label","compactLabel","uppercaseLabel","create","minWidth","borderStyle","alignItems","justifyContent","marginLeft","marginRight","md3Icon","md3IconCompact","md3IconReverse","md3IconReverseCompact","md3IconTextMode","md3IconTextModeCompact","md3IconReverseTextMode","md3IconReverseTextModeCompact","textAlign","marginVertical","marginHorizontal","letterSpacing","textTransform"],"sources":["D:\\software_studio\\final project\\beprod\\BeProductive\\node_modules\\react-native-paper\\src\\components\\Button\\Button.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { $Omit, ThemeProp } from '../../types';\nimport hasTouchHandler from '../../utils/hasTouchHandler';\nimport ActivityIndicator from '../ActivityIndicator';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { ButtonMode, getButtonColors } from './utils';\n\nexport type Props = $Omit<React.ComponentProps<typeof Surface>, 'mode'> & {\n  /**\n   * Mode of the button. You can change the mode to adjust the styling to give it desired emphasis.\n   * - `text` - flat button without background or outline, used for the lowest priority actions, especially when presenting multiple options.\n   * - `outlined` - button with an outline without background, typically used for important, but not primary action – represents medium emphasis.\n   * - `contained` - button with a background color, used for important action, have the most visual impact and high emphasis.\n   * - `elevated` - button with a background color and elevation, used when absolutely necessary e.g. button requires visual separation from a patterned background. @supported Available in v5.x with theme version 3\n   * - `contained-tonal` - button with a secondary background color, an alternative middle ground between contained and outlined buttons. @supported Available in v5.x with theme version 3\n   */\n  mode?: 'text' | 'outlined' | 'contained' | 'elevated' | 'contained-tonal';\n  /**\n   * Whether the color is a dark color. A dark button will render light text and vice-versa. Only applicable for:\n   *  * `contained` mode for theme version 2\n   *  * `contained`, `contained-tonal` and `elevated` modes for theme version 3.\n   */\n  dark?: boolean;\n  /**\n   * Use a compact look, useful for `text` buttons in a row.\n   */\n  compact?: boolean;\n  /**\n   * @deprecated Deprecated in v5.x - use `buttonColor` or `textColor` instead.\n   * Custom text color for flat button, or background color for contained button.\n   */\n  color?: string;\n  /**\n   * Custom button's background color.\n   */\n  buttonColor?: string;\n  /**\n   * Custom button's text color.\n   */\n  textColor?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Icon to display for the `Button`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Label text of the button.\n   */\n  children: React.ReactNode;\n  /**\n   * Make the label text uppercased. Note that this won't work if you pass React elements as children.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility hint for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityHint?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute as soon as the touchable element is pressed and invoked even before onPress.\n   */\n  onPressIn?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute as soon as the touch is released even before onPress.\n   */\n  onPressOut?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * The number of milliseconds a user must touch the element before executing `onLongPress`.\n   */\n  delayLongPress?: number;\n  /**\n   * Style of button's inner content.\n   * Use this prop to apply custom height and width and to set the icon on the right with `flexDirection: 'row-reverse'`.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * Style for the button text.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * A button is component that the user can press to trigger an action.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/button-1.png\" />\n *     <figcaption>Text button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-2.png\" />\n *     <figcaption>Outlined button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-3.png\" />\n *     <figcaption>Contained button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-4.png\" />\n *     <figcaption>Elevated button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-5.png\" />\n *     <figcaption>Contained-tonal button</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Button icon=\"camera\" mode=\"contained\" onPress={() => console.log('Pressed')}>\n *     Press me\n *   </Button>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Button = ({\n  disabled,\n  compact,\n  mode = 'text',\n  dark,\n  loading,\n  icon,\n  buttonColor: customButtonColor,\n  textColor: customTextColor,\n  rippleColor: customRippleColor,\n  children,\n  accessibilityLabel,\n  accessibilityHint,\n  onPress,\n  onPressIn,\n  onPressOut,\n  onLongPress,\n  delayLongPress,\n  style,\n  theme: themeOverrides,\n  uppercase: uppercaseProp,\n  contentStyle,\n  labelStyle,\n  testID = 'button',\n  accessible,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const isMode = React.useCallback(\n    (modeToCompare: ButtonMode) => {\n      return mode === modeToCompare;\n    },\n    [mode]\n  );\n  const { roundness, isV3, animation } = theme;\n  const uppercase = uppercaseProp ?? !theme.isV3;\n\n  const hasPassedTouchHandler = hasTouchHandler({\n    onPress,\n    onPressIn,\n    onPressOut,\n    onLongPress,\n  });\n\n  const isElevationEntitled =\n    !disabled && (isV3 ? isMode('elevated') : isMode('contained'));\n  const initialElevation = isV3 ? 1 : 2;\n  const activeElevation = isV3 ? 2 : 8;\n\n  const { current: elevation } = React.useRef<Animated.Value>(\n    new Animated.Value(isElevationEntitled ? initialElevation : 0)\n  );\n\n  React.useEffect(() => {\n    elevation.setValue(isElevationEntitled ? initialElevation : 0);\n  }, [isElevationEntitled, elevation, initialElevation]);\n\n  const handlePressIn = (e: GestureResponderEvent) => {\n    onPressIn?.(e);\n    if (isV3 ? isMode('elevated') : isMode('contained')) {\n      const { scale } = animation;\n      Animated.timing(elevation, {\n        toValue: activeElevation,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  };\n\n  const handlePressOut = (e: GestureResponderEvent) => {\n    onPressOut?.(e);\n    if (isV3 ? isMode('elevated') : isMode('contained')) {\n      const { scale } = animation;\n      Animated.timing(elevation, {\n        toValue: initialElevation,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  };\n\n  const borderRadius = (isV3 ? 5 : 1) * roundness;\n  const iconSize = isV3 ? 18 : 16;\n\n  const { backgroundColor, borderColor, textColor, borderWidth } =\n    getButtonColors({\n      customButtonColor,\n      customTextColor,\n      theme,\n      mode,\n      disabled,\n      dark,\n    });\n\n  const rippleColor =\n    customRippleColor || color(textColor).alpha(0.12).rgb().string();\n\n  const buttonStyle = {\n    backgroundColor,\n    borderColor,\n    borderWidth,\n    borderRadius,\n  };\n  const touchableStyle = {\n    borderRadius: style\n      ? ((StyleSheet.flatten(style) || {}) as ViewStyle).borderRadius ??\n        borderRadius\n      : borderRadius,\n  };\n\n  const { color: customLabelColor, fontSize: customLabelSize } =\n    StyleSheet.flatten(labelStyle) || {};\n\n  const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n  const textStyle = {\n    color: textColor,\n    ...font,\n  };\n\n  const iconStyle =\n    StyleSheet.flatten(contentStyle)?.flexDirection === 'row-reverse'\n      ? [\n          styles.iconReverse,\n          isV3 && styles[`md3IconReverse${compact ? 'Compact' : ''}`],\n          isV3 &&\n            isMode('text') &&\n            styles[`md3IconReverseTextMode${compact ? 'Compact' : ''}`],\n        ]\n      : [\n          styles.icon,\n          isV3 && styles[`md3Icon${compact ? 'Compact' : ''}`],\n          isV3 &&\n            isMode('text') &&\n            styles[`md3IconTextMode${compact ? 'Compact' : ''}`],\n        ];\n\n  return (\n    <Surface\n      {...rest}\n      testID={`${testID}-container`}\n      style={\n        [\n          styles.button,\n          compact && styles.compact,\n          buttonStyle,\n          style,\n          !isV3 && { elevation },\n        ] as ViewStyle\n      }\n      {...(isV3 && { elevation: elevation })}\n    >\n      <TouchableRipple\n        borderless\n        onPress={onPress}\n        onLongPress={onLongPress}\n        onPressIn={hasPassedTouchHandler ? handlePressIn : undefined}\n        onPressOut={hasPassedTouchHandler ? handlePressOut : undefined}\n        delayLongPress={delayLongPress}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityHint={accessibilityHint}\n        accessibilityRole=\"button\"\n        accessibilityState={{ disabled }}\n        accessible={accessible}\n        disabled={disabled}\n        rippleColor={rippleColor}\n        style={touchableStyle}\n        testID={testID}\n        theme={theme}\n      >\n        <View style={[styles.content, contentStyle]}>\n          {icon && loading !== true ? (\n            <View style={iconStyle} testID={`${testID}-icon-container`}>\n              <Icon\n                source={icon}\n                size={customLabelSize ?? iconSize}\n                color={\n                  typeof customLabelColor === 'string'\n                    ? customLabelColor\n                    : textColor\n                }\n              />\n            </View>\n          ) : null}\n          {loading ? (\n            <ActivityIndicator\n              size={customLabelSize ?? iconSize}\n              color={\n                typeof customLabelColor === 'string'\n                  ? customLabelColor\n                  : textColor\n              }\n              style={iconStyle}\n            />\n          ) : null}\n          <Text\n            variant=\"labelLarge\"\n            selectable={false}\n            numberOfLines={1}\n            testID={`${testID}-text`}\n            style={[\n              styles.label,\n              !isV3 && styles.md2Label,\n              isV3 &&\n                (isMode('text')\n                  ? icon || loading\n                    ? styles.md3LabelTextAddons\n                    : styles.md3LabelText\n                  : styles.md3Label),\n              compact && styles.compactLabel,\n              uppercase && styles.uppercaseLabel,\n              textStyle,\n              labelStyle,\n            ]}\n          >\n            {children}\n          </Text>\n        </View>\n      </TouchableRipple>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    minWidth: 64,\n    borderStyle: 'solid',\n  },\n  compact: {\n    minWidth: 'auto',\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    marginLeft: 12,\n    marginRight: -4,\n  },\n  iconReverse: {\n    marginRight: 12,\n    marginLeft: -4,\n  },\n  /* eslint-disable react-native/no-unused-styles */\n  md3Icon: {\n    marginLeft: 16,\n    marginRight: -16,\n  },\n  md3IconCompact: {\n    marginLeft: 8,\n    marginRight: 0,\n  },\n  md3IconReverse: {\n    marginLeft: -16,\n    marginRight: 16,\n  },\n  md3IconReverseCompact: {\n    marginLeft: 0,\n    marginRight: 8,\n  },\n  md3IconTextMode: {\n    marginLeft: 12,\n    marginRight: -8,\n  },\n  md3IconTextModeCompact: {\n    marginLeft: 6,\n    marginRight: 0,\n  },\n  md3IconReverseTextMode: {\n    marginLeft: -8,\n    marginRight: 12,\n  },\n  md3IconReverseTextModeCompact: {\n    marginLeft: 0,\n    marginRight: 6,\n  },\n  /* eslint-enable react-native/no-unused-styles */\n  label: {\n    textAlign: 'center',\n    marginVertical: 9,\n    marginHorizontal: 16,\n  },\n  md2Label: {\n    letterSpacing: 1,\n  },\n  compactLabel: {\n    marginHorizontal: 8,\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  md3Label: {\n    marginVertical: 10,\n    marginHorizontal: 24,\n  },\n  md3LabelText: {\n    marginHorizontal: 12,\n  },\n  md3LabelTextAddons: {\n    marginHorizontal: 16,\n  },\n});\n\nexport default Button;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}