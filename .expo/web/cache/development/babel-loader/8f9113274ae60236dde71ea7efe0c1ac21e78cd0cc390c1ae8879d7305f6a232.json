{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"icon\", \"label\", \"active\", \"theme\", \"rippleColor\", \"style\", \"onPress\", \"accessibilityLabel\", \"right\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { useInternalTheme } from \"../../core/theming\";\nimport Icon from \"../Icon\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nvar DrawerItem = function DrawerItem(_ref) {\n  var icon = _ref.icon,\n    label = _ref.label,\n    active = _ref.active,\n    themeOverrides = _ref.theme,\n    customRippleColor = _ref.rippleColor,\n    style = _ref.style,\n    onPress = _ref.onPress,\n    accessibilityLabel = _ref.accessibilityLabel,\n    right = _ref.right,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var roundness = theme.roundness,\n    isV3 = theme.isV3;\n  var backgroundColor = active ? isV3 ? theme.colors.secondaryContainer : color(theme.colors.primary).alpha(0.12).rgb().string() : 'transparent';\n  var contentColor = active ? isV3 ? theme.colors.onSecondaryContainer : theme.colors.primary : isV3 ? theme.colors.onSurfaceVariant : color(theme.colors.text).alpha(0.68).rgb().string();\n  var labelMargin = icon ? isV3 ? 12 : 32 : 0;\n  var borderRadius = (isV3 ? 7 : 1) * roundness;\n  var rippleColor = isV3 ? color(contentColor).alpha(0.12).rgb().string() : undefined;\n  var font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n  return React.createElement(View, rest, React.createElement(TouchableRipple, {\n    borderless: true,\n    onPress: onPress,\n    style: [styles.container, {\n      backgroundColor: backgroundColor,\n      borderRadius: borderRadius\n    }, isV3 && styles.v3Container, style],\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      selected: active\n    },\n    accessibilityLabel: accessibilityLabel,\n    rippleColor: customRippleColor || rippleColor,\n    theme: theme\n  }, React.createElement(View, {\n    style: [styles.wrapper, isV3 && styles.v3Wrapper]\n  }, React.createElement(View, {\n    style: styles.content\n  }, icon ? React.createElement(Icon, {\n    source: icon,\n    size: 24,\n    color: contentColor\n  }) : null, React.createElement(Text, {\n    variant: \"labelLarge\",\n    selectable: false,\n    numberOfLines: 1,\n    style: [styles.label, _objectSpread({\n      color: contentColor,\n      marginLeft: labelMargin\n    }, font)]\n  }, label)), right === null || right === void 0 ? void 0 : right({\n    color: contentColor\n  }))));\n};\nDrawerItem.displayName = 'Drawer.Item';\nvar styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4\n  },\n  v3Container: {\n    justifyContent: 'center',\n    height: 56,\n    marginLeft: 12,\n    marginRight: 12,\n    marginVertical: 0\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8\n  },\n  v3Wrapper: {\n    marginLeft: 16,\n    marginRight: 24,\n    padding: 0\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  label: {\n    marginRight: 32\n  }\n});\nexport default DrawerItem;","map":{"version":3,"names":["React","StyleSheet","View","color","useInternalTheme","Icon","TouchableRipple","Text","DrawerItem","_ref","icon","label","active","themeOverrides","theme","customRippleColor","rippleColor","style","onPress","accessibilityLabel","right","rest","_objectWithoutProperties","_excluded","roundness","isV3","backgroundColor","colors","secondaryContainer","primary","alpha","rgb","string","contentColor","onSecondaryContainer","onSurfaceVariant","text","labelMargin","borderRadius","undefined","font","fonts","labelLarge","medium","createElement","borderless","styles","container","v3Container","accessibilityRole","accessibilityState","selected","wrapper","v3Wrapper","content","source","size","variant","selectable","numberOfLines","_objectSpread","marginLeft","displayName","create","marginHorizontal","marginVertical","justifyContent","height","marginRight","flexDirection","alignItems","padding","flex"],"sources":["C:\\Users\\jmf03\\Desktop\\Software studios\\FINAL PROJECT\\BeProductive\\node_modules\\react-native-paper\\src\\components\\Drawer\\DrawerItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  ColorValue,\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The label text of the item.\n   */\n  label: string;\n  /**\n   * Icon to display for the `DrawerItem`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether to highlight the drawer item as active.\n   */\n  active?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Callback which returns a React element to display on the right side. For instance a Badge.\n   */\n  right?: (props: { color: string }) => React.ReactNode;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/drawer-item.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *    <Drawer.Item\n *      style={{ backgroundColor: '#64ffda' }}\n *      icon=\"star\"\n *      label=\"First Item\"\n *    />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerItem = ({\n  icon,\n  label,\n  active,\n  theme: themeOverrides,\n  rippleColor: customRippleColor,\n  style,\n  onPress,\n  accessibilityLabel,\n  right,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { roundness, isV3 } = theme;\n\n  const backgroundColor = active\n    ? isV3\n      ? theme.colors.secondaryContainer\n      : color(theme.colors.primary).alpha(0.12).rgb().string()\n    : 'transparent';\n  const contentColor = active\n    ? isV3\n      ? theme.colors.onSecondaryContainer\n      : theme.colors.primary\n    : isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.68).rgb().string();\n\n  const labelMargin = icon ? (isV3 ? 12 : 32) : 0;\n  const borderRadius = (isV3 ? 7 : 1) * roundness;\n  const rippleColor = isV3\n    ? color(contentColor).alpha(0.12).rgb().string()\n    : undefined;\n  const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n  return (\n    <View {...rest}>\n      <TouchableRipple\n        borderless\n        onPress={onPress}\n        style={[\n          styles.container,\n          { backgroundColor, borderRadius },\n          isV3 && styles.v3Container,\n          style,\n        ]}\n        accessibilityRole=\"button\"\n        accessibilityState={{ selected: active }}\n        accessibilityLabel={accessibilityLabel}\n        rippleColor={customRippleColor || rippleColor}\n        theme={theme}\n      >\n        <View style={[styles.wrapper, isV3 && styles.v3Wrapper]}>\n          <View style={styles.content}>\n            {icon ? (\n              <Icon source={icon} size={24} color={contentColor} />\n            ) : null}\n            <Text\n              variant=\"labelLarge\"\n              selectable={false}\n              numberOfLines={1}\n              style={[\n                styles.label,\n                {\n                  color: contentColor,\n                  marginLeft: labelMargin,\n                  ...font,\n                },\n              ]}\n            >\n              {label}\n            </Text>\n          </View>\n\n          {right?.({ color: contentColor })}\n        </View>\n      </TouchableRipple>\n    </View>\n  );\n};\n\nDrawerItem.displayName = 'Drawer.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n  },\n  v3Container: {\n    justifyContent: 'center',\n    height: 56,\n    marginLeft: 12,\n    marginRight: 12,\n    marginVertical: 0,\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  v3Wrapper: {\n    marginLeft: 16,\n    marginRight: 24,\n    padding: 0,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    marginRight: 32,\n  },\n});\n\nexport default DrawerItem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}