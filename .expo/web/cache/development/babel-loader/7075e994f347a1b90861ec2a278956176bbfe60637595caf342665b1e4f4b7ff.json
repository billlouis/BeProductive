{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AnimatedText from \"../../Typography/AnimatedText\";\nvar InputLabel = function InputLabel(props) {\n  var labeled = props.labeled,\n    wiggle = props.wiggle,\n    error = props.error,\n    focused = props.focused,\n    opacity = props.opacity,\n    labelLayoutWidth = props.labelLayoutWidth,\n    labelBackground = props.labelBackground,\n    label = props.label,\n    labelError = props.labelError,\n    onLayoutAnimatedText = props.onLayoutAnimatedText,\n    hasActiveOutline = props.hasActiveOutline,\n    activeColor = props.activeColor,\n    placeholderStyle = props.placeholderStyle,\n    baseLabelTranslateX = props.baseLabelTranslateX,\n    baseLabelTranslateY = props.baseLabelTranslateY,\n    font = props.font,\n    fontSize = props.fontSize,\n    lineHeight = props.lineHeight,\n    fontWeight = props.fontWeight,\n    placeholderOpacity = props.placeholderOpacity,\n    wiggleOffsetX = props.wiggleOffsetX,\n    labelScale = props.labelScale,\n    topPosition = props.topPosition,\n    paddingLeft = props.paddingLeft,\n    paddingRight = props.paddingRight,\n    backgroundColor = props.backgroundColor,\n    roundness = props.roundness,\n    placeholderColor = props.placeholderColor,\n    errorColor = props.errorColor,\n    labelTranslationXOffset = props.labelTranslationXOffset,\n    maxFontSizeMultiplier = props.maxFontSizeMultiplier,\n    testID = props.testID;\n  var paddingOffset = paddingLeft && paddingRight ? {\n    paddingLeft: paddingLeft,\n    paddingRight: paddingRight\n  } : {};\n  var labelTranslationX = {\n    transform: [{\n      translateX: labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [baseLabelTranslateX, labelTranslationXOffset || 0]\n      })\n    }]\n  };\n  var labelStyle = _objectSpread(_objectSpread({}, font), {}, {\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    fontWeight: fontWeight,\n    opacity: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [hasActiveOutline ? 1 : 0, 0]\n    }),\n    transform: [{\n      translateX: wiggle ? error.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, wiggleOffsetX, 0]\n      }) : 0\n    }, {\n      translateY: baseLabelTranslateY !== 0 ? labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [baseLabelTranslateY, 0]\n      }) : 0\n    }, {\n      scale: labelScale !== 0 ? labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [labelScale, 1]\n      }) : labeled\n    }]\n  });\n  var textColor = labelError && errorColor ? errorColor : placeholderColor;\n  return React.createElement(Animated.View, {\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, styles.labelContainer, {\n      opacity: opacity\n    }, labelTranslationX]\n  }, labelBackground === null || labelBackground === void 0 ? void 0 : labelBackground({\n    labeled: labeled,\n    labelLayoutWidth: labelLayoutWidth,\n    labelStyle: labelStyle,\n    placeholderStyle: placeholderStyle,\n    baseLabelTranslateX: baseLabelTranslateX,\n    topPosition: topPosition,\n    label: label,\n    backgroundColor: backgroundColor,\n    roundness: roundness,\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }), React.createElement(AnimatedText, {\n    variant: \"bodySmall\",\n    onLayout: onLayoutAnimatedText,\n    style: [placeholderStyle, {\n      top: topPosition\n    }, labelStyle, paddingOffset || {}, {\n      color: activeColor\n    }],\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier,\n    testID: testID + \"-label-active\"\n  }, label), React.createElement(AnimatedText, {\n    variant: focused ? 'bodyLarge' : 'bodySmall',\n    style: [placeholderStyle, {\n      top: topPosition\n    }, labelStyle, paddingOffset, {\n      color: textColor,\n      opacity: placeholderOpacity\n    }],\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier,\n    testID: testID + \"-label-inactive\"\n  }, label));\n};\nvar styles = StyleSheet.create({\n  labelContainer: {\n    zIndex: 3\n  }\n});\nexport default React.memo(InputLabel);","map":{"version":3,"names":["React","Animated","StyleSheet","AnimatedText","InputLabel","props","labeled","wiggle","error","focused","opacity","labelLayoutWidth","labelBackground","label","labelError","onLayoutAnimatedText","hasActiveOutline","activeColor","placeholderStyle","baseLabelTranslateX","baseLabelTranslateY","font","fontSize","lineHeight","fontWeight","placeholderOpacity","wiggleOffsetX","labelScale","topPosition","paddingLeft","paddingRight","backgroundColor","roundness","placeholderColor","errorColor","labelTranslationXOffset","maxFontSizeMultiplier","testID","paddingOffset","labelTranslationX","transform","translateX","interpolate","inputRange","outputRange","labelStyle","_objectSpread","translateY","scale","textColor","createElement","View","pointerEvents","style","absoluteFill","styles","labelContainer","variant","onLayout","top","color","numberOfLines","create","zIndex","memo"],"sources":["D:\\University\\Semester 4\\SOftware Studio\\Demo 3\\BeProductive\\node_modules\\react-native-paper\\src\\components\\TextInput\\Label\\InputLabel.tsx"],"sourcesContent":["import React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\n\nimport AnimatedText from '../../Typography/AnimatedText';\nimport type { InputLabelProps } from '../types';\n\nconst InputLabel = (props: InputLabelProps) => {\n  const {\n    labeled,\n    wiggle,\n    error,\n    focused,\n    opacity,\n    labelLayoutWidth,\n    labelBackground,\n    label,\n    labelError,\n    onLayoutAnimatedText,\n    hasActiveOutline,\n    activeColor,\n    placeholderStyle,\n    baseLabelTranslateX,\n    baseLabelTranslateY,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    placeholderOpacity,\n    wiggleOffsetX,\n    labelScale,\n    topPosition,\n    paddingLeft,\n    paddingRight,\n    backgroundColor,\n    roundness,\n    placeholderColor,\n    errorColor,\n    labelTranslationXOffset,\n    maxFontSizeMultiplier,\n    testID,\n  } = props;\n\n  const paddingOffset =\n    paddingLeft && paddingRight ? { paddingLeft, paddingRight } : {};\n\n  const labelTranslationX = {\n    transform: [\n      {\n        // Offset label scale since RN doesn't support transform origin\n        translateX: labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [baseLabelTranslateX, labelTranslationXOffset || 0],\n        }),\n      },\n    ],\n  };\n\n  const labelStyle = {\n    ...font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    opacity: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [hasActiveOutline ? 1 : 0, 0],\n    }),\n    transform: [\n      {\n        // Wiggle the label when there's an error\n        translateX: wiggle\n          ? error.interpolate({\n              inputRange: [0, 0.5, 1],\n              outputRange: [0, wiggleOffsetX, 0],\n            })\n          : 0,\n      },\n      {\n        // Move label to top\n        translateY:\n          baseLabelTranslateY !== 0\n            ? labeled.interpolate({\n                inputRange: [0, 1],\n                outputRange: [baseLabelTranslateY, 0],\n              })\n            : 0,\n      },\n      {\n        // Make label smaller\n        scale:\n          labelScale !== 0\n            ? labeled.interpolate({\n                inputRange: [0, 1],\n                outputRange: [labelScale, 1],\n              })\n            : labeled,\n      },\n    ],\n  };\n\n  const textColor = labelError && errorColor ? errorColor : placeholderColor;\n\n  return (\n    // Position colored placeholder and gray placeholder on top of each other and crossfade them\n    // This gives the effect of animating the color, but allows us to use native driver\n    <Animated.View\n      pointerEvents=\"none\"\n      style={[\n        StyleSheet.absoluteFill,\n        styles.labelContainer,\n        { opacity },\n        labelTranslationX,\n      ]}\n    >\n      {labelBackground?.({\n        labeled,\n        labelLayoutWidth,\n        labelStyle,\n        placeholderStyle,\n        baseLabelTranslateX,\n        topPosition,\n        label,\n        backgroundColor,\n        roundness,\n        maxFontSizeMultiplier: maxFontSizeMultiplier,\n      })}\n      <AnimatedText\n        variant=\"bodySmall\"\n        onLayout={onLayoutAnimatedText}\n        style={[\n          placeholderStyle,\n          {\n            top: topPosition,\n          },\n          labelStyle,\n          paddingOffset || {},\n          {\n            color: activeColor,\n          },\n        ]}\n        numberOfLines={1}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n        testID={`${testID}-label-active`}\n      >\n        {label}\n      </AnimatedText>\n      <AnimatedText\n        variant={focused ? 'bodyLarge' : 'bodySmall'}\n        style={[\n          placeholderStyle,\n          {\n            top: topPosition,\n          },\n          labelStyle,\n          paddingOffset,\n          {\n            color: textColor,\n            opacity: placeholderOpacity,\n          },\n        ]}\n        numberOfLines={1}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n        testID={`${testID}-label-inactive`}\n      >\n        {label}\n      </AnimatedText>\n    </Animated.View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  labelContainer: {\n    zIndex: 3,\n  },\n});\n\nexport default React.memo(InputLabel);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}