{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Camera } from 'expo-camera';\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Add_task(_ref) {\n  var navigation = _ref.navigation;\n  var TaskInit = {\n    title: null\n  };\n  var _useState = useState(TaskInit),\n    _useState2 = _slicedToArray(_useState, 2),\n    Task = _useState2[0],\n    SetTask = _useState2[1];\n  var handletitlechange = function handletitlechange(t) {\n    SetTask(_objectSpread(_objectSpread({}, Task), {}, {\n      title: t\n    }));\n  };\n  var handleaddtask = function handleaddtask() {};\n  return _jsx(SafeAreaView, {\n    style: StyleSheet.container,\n    children: _jsxs(KeyboardAvoidingView, {\n      behavior: Platform.OS === 'ios' ? \"padding\" : \"height\",\n      style: styles.AddTaskWrapper,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Task Title\"\n      }), _jsx(TextInput, {\n        style: styles.titleinput,\n        placeholder: 'Title',\n        value: Task.title,\n        onChangeText: function onChangeText(text) {\n          return handletitlechange(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleaddtask();\n        },\n        children: _jsx(View, {\n          style: styles.continuebutton,\n          children: _jsx(Text, {\n            style: styles.continuetext,\n            children: \"Continue >>>\"\n          })\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {},\n  AddTaskWrapper: {},\n  title: {},\n  titleinput: {\n    marginTop: 20,\n    paddingVertical: 10,\n    backgroundColor: '#f3f7ff',\n    textAlign: 'left',\n    fontSize: 20\n  },\n  continuebutton: {\n    marginTop: 20,\n    paddingVertical: 20,\n    backgroundColor: \"#187C04\"\n  },\n  continuetext: {\n    color: \"white\",\n    textAlign: 'center',\n    fontSize: 20\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","SafeAreaView","View","Button","Image","KeyboardAvoidingView","TextInput","TouchableOpacity","Alert","Camera","ImagePicker","jsx","_jsx","jsxs","_jsxs","Add_task","_ref","navigation","TaskInit","title","_useState","_useState2","_slicedToArray","Task","SetTask","handletitlechange","t","_objectSpread","handleaddtask","style","container","children","behavior","Platform","OS","styles","AddTaskWrapper","titleinput","placeholder","value","onChangeText","text","onPress","continuebutton","continuetext","create","marginTop","paddingVertical","backgroundColor","textAlign","fontSize","color"],"sources":["D:/software_studio/final project/beprod/BeProductive/components/main/Addtask.js"],"sourcesContent":["import React ,{useState, useEffect} from 'react';\r\nimport {StyleSheet,Text, SafeAreaView,View, Button, Image,KeyboardAvoidingView,TextInput,TouchableOpacity,Alert} from 'react-native';\r\n\r\n//added\r\nimport {Camera} from 'expo-camera';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nexport default function Add_task({navigation}){\r\n\r\n\r\n\r\n\r\n\r\n  //dummy \r\n  const TaskInit={\r\n    title:null\r\n  }\r\n\r\n  //task state\r\n  const [Task,SetTask] = useState(TaskInit);\r\n\r\n  \r\n\r\n  //handlers\r\n  const handletitlechange= (t)=>{\r\n    SetTask(\r\n      {\r\n        ...Task,\r\n        title:t,\r\n      }\r\n    )\r\n  }\r\n\r\n  const handleaddtask = ()=>{\r\n    \r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n  return(\r\n      <SafeAreaView style={StyleSheet.container}>\r\n\r\n        <KeyboardAvoidingView \r\n          behavior={Platform.OS === 'ios' ? \"padding\":\"height\"}\r\n          style={styles.AddTaskWrapper} \r\n        >\r\n\r\n          <Text style={styles.title}>Task Title</Text>\r\n          <TextInput style={styles.titleinput} placeholder={'Title'} value={Task.title} onChangeText={text => handletitlechange(text)}></TextInput>\r\n\r\n\r\n          {/* <TextInput style={styles.notessection} placeholder={'Title'}></TextInput> */}\r\n\r\n\r\n          <TouchableOpacity onPress={()=>handleaddtask()}>\r\n            <View style={styles.continuebutton}>\r\n              <Text style={styles.continuetext}>{\"Continue >>>\"}</Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n\r\n\r\n        </KeyboardAvoidingView>\r\n      </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles=StyleSheet.create({\r\n\r\n\r\n\r\n  //mine\r\n  container:{\r\n\r\n  },\r\n\r\n  AddTaskWrapper:{\r\n\r\n  },\r\n\r\n  title:{\r\n\r\n  },\r\n\r\n  titleinput:{\r\n    marginTop: 20,\r\n    paddingVertical: 10,\r\n    backgroundColor: '#f3f7ff',\r\n    textAlign: 'left',\r\n    fontSize: 20,\r\n  },\r\n\r\n  // the continue button\r\n  continuebutton:{\r\n    marginTop: 20,\r\n    paddingVertical: 20,\r\n    backgroundColor: \"#187C04\",\r\n  },\r\n\r\n  continuetext:{\r\n    color:\"white\",\r\n    textAlign: 'center',\r\n    fontSize: 20,\r\n  }\r\n\r\n\r\n\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, {useState, useEffect} from 'react';\r\n// import {StyleSheet,Text, View, Button, Image} from 'react-native'\r\n\r\n// export default function Add({navigation}){\r\n//   const [hasCameraPermission, setHasCameraPermission] = useState(null);\r\n//   const [type, setType] = useState(Camera.Constants.Type.Back);\r\n//   const [camera, setCamera] = useState(null);\r\n//   const [image, setImage] = useState(null);\r\n//   const [hasGalleryPermission, setHasGalleryPermission] = useState(null);\r\n//   useEffect(() => {\r\n//     (async ()=> {\r\n//       const cameraStatus = await Camera.requestPermissionsAsync();\r\n//       setHasCameraPermission(cameraStatus === 'granted');\r\n      \r\n//       const galleryStatus = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n//       setHasGalleryPermission(galleryStatus === 'granted');\r\n\r\n//     })();\r\n//   }, []);\r\n\r\n//   if (hasCameraPermission === null || hasGalleryPermission === null){\r\n//     return <View/>;\r\n//   }\r\n//   if(hasCameraPermission === false){\r\n//     //return <Text>No access</Text>\r\n//   }\r\n\r\n//   const takePicture = async () => {\r\n//     if(camera){\r\n//       const data = await camera.takePictureAsync(null);\r\n//       setImage(data.uri); \r\n//       console.log(data.uri)\r\n//     }\r\n//   }\r\n\r\n//   const pickImage = async () => {\r\n//     let result = await ImagePicker.launchImageLibraryAsync({\r\n//       mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n//       allowsEditing: true,\r\n//       aspect: [1,1],\r\n//       quality: 1,\r\n//     });\r\n\r\n//     console.log(result);\r\n\r\n//     if (!result.canceled){\r\n//       setImage(result.uri);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <View style = {{flex : 1}}>\r\n//       <View style = {styles.cameraContainer}>\r\n//         <Camera \r\n//           ref = {ref => setCamera(ref)}\r\n//           style = {styles.fixedRatio}\r\n//           type = {type}\r\n//           ratio = {'1:1'}\r\n//         />\r\n//       </View>\r\n//       <Button\r\n//         title = \"Flip Image\"\r\n//         onPress = {() => {\r\n//           setType(\r\n//             type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back\r\n//           );\r\n//         }}>\r\n\r\n//       </Button>\r\n//       <Button title = \"Take Picture\" onPress={()=> takePicture()}/>\r\n//       <Button title = \"Pick Image\" onPress={()=> pickImage()}/>\r\n//       <Button title = \"Save\" onPress = {() => navigation.navigate('Save',{image})}/>\r\n//       {image && <Image source = {{uri:image}} style = {{flex: 1}}/>}\r\n//     </View>\r\n//   )\r\n\r\n// }\r\n\r\n// const styles = StyleSheet.create({\r\n//   cameraContainer:{\r\n//     flex:1,\r\n//     flexDirection: 'row'\r\n//   },\r\n//   fixedRatio:{\r\n//     flex:1,\r\n//     aspectRatio:1\r\n//   }\r\n// })"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}